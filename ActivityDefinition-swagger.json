
{
    "swagger": "2.0",
    "info": {
        "title": "ActivityDefinition API",
        "description": "A simplified version of the HL7 FHIR API for ActivityDefinition resources.",
        "version": "4.0.1"
    },
    "basePath": "/fhir-server/api/v4",
    "x-ibm-configuration": {
        "gateway": "datapower-api-gateway",
        "type": "rest",
        "phase": "realized",
        "enforced": true,
        "testable": true,
        "cors": {
            "enabled": true
        },
        "assembly": {
            "execute": [
                {
                    "invoke": {
                        "version": "2.0.0",
                        "title": "invoke",
                        "header-control": {
                            "type": "blacklist",
                            "values": [
                            ]
                        },
                        "parameter-control": {
                            "type": "whitelist",
                            "values": [
                            ]
                        },
                        "timeout": 60,
                        "verb": "keep",
                        "cache-response": "protocol",
                        "cache-ttl": 900,
                        "stop-on-error": [
                        ],
                        "target-url": "$(target-url)$(api.operation.path)$(request.search)"
                    }
                }
            ],
            "catch": [
            ]
        },
        "properties": {
            "target-url": {
                "value": "https://localhost/fhir-server/api/v4/",
                "description": "The URL of the target service",
                "encoded": false
            }
        },
        "activity-log": {
            "enabled": true,
            "error-content": "header",
            "success-content": "activity"
        },
        "application-authentication": {
            "certificate": false
        },
        "catalogs": {
        }
    },
    "tags": [
        {
            "name": "ActivityDefinition"
        }
    ],
    "paths": {
        "/ActivityDefinition": {
            "post": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Create an ActivityDefinition resource",
                "operationId": "createActivityDefinition",
                "consumes": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActivityDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create ActivityDefinition operation successful"
                    }
                }
            },
            "get": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Search for ActivityDefinition resources",
                "operationId": "searchActivityDefinition",
                "produces": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "name": "composed-of",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "date",
                        "description": "The activity definition publication date",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "depends-on",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "derived-from",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "description",
                        "description": "The description of the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the activity definition is intended to be in use",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "predecessor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "status",
                        "description": "The current status of the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "successor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "topic",
                        "description": "Topics associated with the module",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "version",
                        "description": "The business version of the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the activity definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "$ref": "#/parameters/_idParam"
                    },
                    {
                        "$ref": "#/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/parameters/_tagParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ActivityDefinition operation successful",
                        "schema": {
                            "$ref": "#/definitions/Bundle"
                        }
                    }
                }
            }
        },
        "/ActivityDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Read specific version of an ActivityDefinition resource",
                "operationId": "vreadActivityDefinition",
                "produces": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/idParam"
                    },
                    {
                        "$ref": "#/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ActivityDefinition operation successful",
                        "schema": {
                            "$ref": "#/definitions/ActivityDefinition"
                        }
                    }
                }
            }
        },
        "/ActivityDefinition/{id}": {
            "get": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Read an ActivityDefinition resource",
                "operationId": "readActivityDefinition",
                "produces": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ActivityDefinition operation successful",
                        "schema": {
                            "$ref": "#/definitions/ActivityDefinition"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Update an existing ActivityDefinition resource",
                "operationId": "updateActivityDefinition",
                "consumes": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/idParam"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActivityDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ActivityDefinition operation successful"
                    },
                    "201": {
                        "description": "Create ActivityDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Delete an ActivityDefinition resource",
                "operationId": "deleteActivityDefinition",
                "parameters": [
                    {
                        "$ref": "#/parameters/idParam"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete ActivityDefinition operation successful"
                    }
                }
            }
        },
        "/ActivityDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Return the history of an ActivityDefinition resource",
                "operationId": "historyActivityDefinition",
                "produces": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ActivityDefinition operation successful",
                        "schema": {
                            "$ref": "#/definitions/Bundle"
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "idParam": {
            "name": "id",
            "description": "logical identifier",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "vidParam": {
            "name": "vid",
            "description": "version identifier",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "_idParam": {
            "name": "_id",
            "description": "Logical id of this artifact",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "_lastUpdatedParam": {
            "name": "_lastUpdated",
            "description": "When the resource version last changed",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "_profileParam": {
            "name": "_profile",
            "description": "Profiles this resource claims to conform to",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "_securityParam": {
            "name": "_security",
            "description": "Security Labels applied to this resource",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "_sourceParam": {
            "name": "_source",
            "description": "Identifies where the resource comes from",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "_tagParam": {
            "name": "_tag",
            "description": "Tags applied to this resource",
            "in": "query",
            "required": false,
            "type": "string"
        }
    },
    "definitions": {
        "Resource": {
            "type": "object",
            "discriminator": "resourceType",
            "properties": {
                "resourceType": {
                    "type": "string",
                    "enum": [
                        "Account",
                        "ActivityDefinition",
                        "AdverseEvent",
                        "AllergyIntolerance",
                        "Appointment",
                        "AppointmentResponse",
                        "AuditEvent",
                        "Basic",
                        "Binary",
                        "BiologicallyDerivedProduct",
                        "BodyStructure",
                        "Bundle",
                        "CapabilityStatement",
                        "CarePlan",
                        "CareTeam",
                        "CatalogEntry",
                        "ChargeItem",
                        "ChargeItemDefinition",
                        "Claim",
                        "ClaimResponse",
                        "ClinicalImpression",
                        "CodeSystem",
                        "Communication",
                        "CommunicationRequest",
                        "CompartmentDefinition",
                        "Composition",
                        "ConceptMap",
                        "Condition",
                        "Consent",
                        "Contract",
                        "Coverage",
                        "CoverageEligibilityRequest",
                        "CoverageEligibilityResponse",
                        "DetectedIssue",
                        "Device",
                        "DeviceDefinition",
                        "DeviceMetric",
                        "DeviceRequest",
                        "DeviceUseStatement",
                        "DiagnosticReport",
                        "DocumentManifest",
                        "DocumentReference",
                        "DomainResource",
                        "EffectEvidenceSynthesis",
                        "Encounter",
                        "Endpoint",
                        "EnrollmentRequest",
                        "EnrollmentResponse",
                        "EpisodeOfCare",
                        "EventDefinition",
                        "Evidence",
                        "EvidenceVariable",
                        "ExampleScenario",
                        "ExplanationOfBenefit",
                        "FamilyMemberHistory",
                        "Flag",
                        "Goal",
                        "GraphDefinition",
                        "Group",
                        "GuidanceResponse",
                        "HealthcareService",
                        "ImagingStudy",
                        "Immunization",
                        "ImmunizationEvaluation",
                        "ImmunizationRecommendation",
                        "ImplementationGuide",
                        "InsurancePlan",
                        "Invoice",
                        "Library",
                        "Linkage",
                        "List",
                        "Location",
                        "Measure",
                        "MeasureReport",
                        "Media",
                        "Medication",
                        "MedicationAdministration",
                        "MedicationDispense",
                        "MedicationKnowledge",
                        "MedicationRequest",
                        "MedicationStatement",
                        "MedicinalProduct",
                        "MedicinalProductAuthorization",
                        "MedicinalProductContraindication",
                        "MedicinalProductIndication",
                        "MedicinalProductIngredient",
                        "MedicinalProductInteraction",
                        "MedicinalProductManufactured",
                        "MedicinalProductPackaged",
                        "MedicinalProductPharmaceutical",
                        "MedicinalProductUndesirableEffect",
                        "MessageDefinition",
                        "MessageHeader",
                        "MolecularSequence",
                        "NamingSystem",
                        "NutritionOrder",
                        "Observation",
                        "ObservationDefinition",
                        "OperationDefinition",
                        "OperationOutcome",
                        "Organization",
                        "OrganizationAffiliation",
                        "Parameters",
                        "Patient",
                        "PaymentNotice",
                        "PaymentReconciliation",
                        "Person",
                        "PlanDefinition",
                        "Practitioner",
                        "PractitionerRole",
                        "Procedure",
                        "Provenance",
                        "Questionnaire",
                        "QuestionnaireResponse",
                        "RelatedPerson",
                        "RequestGroup",
                        "ResearchDefinition",
                        "ResearchElementDefinition",
                        "ResearchStudy",
                        "ResearchSubject",
                        "Resource",
                        "RiskAssessment",
                        "RiskEvidenceSynthesis",
                        "Schedule",
                        "SearchParameter",
                        "ServiceRequest",
                        "Slot",
                        "Specimen",
                        "SpecimenDefinition",
                        "StructureDefinition",
                        "StructureMap",
                        "Subscription",
                        "Substance",
                        "SubstanceNucleicAcid",
                        "SubstancePolymer",
                        "SubstanceProtein",
                        "SubstanceReferenceInformation",
                        "SubstanceSourceMaterial",
                        "SubstanceSpecification",
                        "SupplyDelivery",
                        "SupplyRequest",
                        "Task",
                        "TerminologyCapabilities",
                        "TestReport",
                        "TestScript",
                        "ValueSet",
                        "VerificationResult",
                        "VisionPrescription"
                    ]
                },
                "id": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                    "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
                },
                "implicitRules": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
                },
                "language": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "The base language in which the resource is written."
                }
            },
            "required": [
                "resourceType"
            ]
        },
        "DomainResource": {
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                },
                {
                    "type": "object",
                    "properties": {
                        "text": {
                            "$ref": "#/definitions/Narrative",
                            "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety."
                        },
                        "contained": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Resource",
                                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
                            }
                        },
                        "extension": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extension",
                                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
                            }
                        },
                        "modifierExtension": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extension",
                                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
                            }
                        }
                    }
                }
            ]
        },
        "ActivityDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/DomainResource"
                },
                {
                    "type": "object",
                    "properties": {
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "An absolute URI that is used to identify this activity definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this activity definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the activity definition is stored on different servers."
                        },
                        "identifier": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Identifier",
                                "description": "A formal identifier that is used to identify this activity definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
                            }
                        },
                        "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The identifier that is used to identify this version of the activity definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the activity definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active assets."
                        },
                        "name": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A natural language name identifying the activity definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                        },
                        "title": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A short, descriptive, user-friendly title for the activity definition."
                        },
                        "subtitle": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "An explanatory or alternate title for the activity definition giving additional information about its content."
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "active",
                                "retired",
                                "unknown"
                            ],
                            "description": "The status of this activity definition. Enables tracking the life-cycle of the content."
                        },
                        "experimental": {
                            "type": "boolean",
                            "description": "A Boolean value to indicate that this activity definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                        },
                        "subjectCodeableConcept": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A code or group definition that describes the intended subject of the activity being defined."
                        },
                        "subjectReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "A code or group definition that describes the intended subject of the activity being defined."
                        },
                        "date": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The date  (and optionally time) when the activity definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the activity definition changes."
                        },
                        "publisher": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The name of the organization or individual that published the activity definition."
                        },
                        "contact": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContactDetail",
                                "description": "Contact details to assist a user in finding and communicating with the publisher."
                            }
                        },
                        "description": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A free text natural language description of the activity definition from a consumer's perspective."
                        },
                        "useContext": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsageContext",
                                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate activity definition instances."
                            }
                        },
                        "jurisdiction": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "A legal or geographic region in which the activity definition is intended to be used."
                            }
                        },
                        "purpose": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Explanation of why this activity definition is needed and why it has been designed as it has."
                        },
                        "usage": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A detailed description of how the activity definition is used from a clinical perspective."
                        },
                        "copyright": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A copyright statement relating to the activity definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the activity definition."
                        },
                        "approvalDate": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                            "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                        },
                        "lastReviewDate": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                            "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                        },
                        "effectivePeriod": {
                            "$ref": "#/definitions/Period",
                            "description": "The period during which the activity definition content was or is planned to be in active use."
                        },
                        "topic": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "Descriptive topics related to the content of the activity. Topics provide a high-level categorization of the activity that can be useful for filtering and searching."
                            }
                        },
                        "author": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContactDetail",
                                "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                            }
                        },
                        "editor": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContactDetail",
                                "description": "An individual or organization primarily responsible for internal coherence of the content."
                            }
                        },
                        "reviewer": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContactDetail",
                                "description": "An individual or organization primarily responsible for review of some aspect of the content."
                            }
                        },
                        "endorser": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContactDetail",
                                "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                            }
                        },
                        "relatedArtifact": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RelatedArtifact",
                                "description": "Related artifacts such as additional documentation, justification, or bibliographic references."
                            }
                        },
                        "library": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "A reference to a Library resource containing any formal logic used by the activity definition."
                            }
                        },
                        "kind": {
                            "type": "string",
                            "enum": [
                                "Appointment",
                                "AppointmentResponse",
                                "CarePlan",
                                "Claim",
                                "CommunicationRequest",
                                "Contract",
                                "DeviceRequest",
                                "EnrollmentRequest",
                                "ImmunizationRecommendation",
                                "MedicationRequest",
                                "NutritionOrder",
                                "ServiceRequest",
                                "SupplyRequest",
                                "Task",
                                "VisionPrescription"
                            ],
                            "description": "A description of the kind of resource the activity definition is representing. For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest. Typically, but not always, this is a Request resource."
                        },
                        "profile": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A profile to which the target of the activity definition is expected to conform."
                        },
                        "code": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Detailed description of the type of activity; e.g. What lab test, what procedure, what kind of encounter."
                        },
                        "intent": {
                            "type": "string",
                            "enum": [
                                "proposal",
                                "plan",
                                "directive",
                                "order",
                                "original-order",
                                "reflex-order",
                                "filler-order",
                                "instance-order",
                                "option"
                            ],
                            "description": "Indicates the level of authority/intentionality associated with the activity and where the request should fit into the workflow chain."
                        },
                        "priority": {
                            "type": "string",
                            "enum": [
                                "routine",
                                "urgent",
                                "asap",
                                "stat"
                            ],
                            "description": "Indicates how quickly the activity  should be addressed with respect to other requests."
                        },
                        "doNotPerform": {
                            "type": "boolean",
                            "description": "Set this to true if the definition is to indicate that a particular activity should NOT be performed. If true, this element should be interpreted to reinforce a negative coding. For example NPO as a code with a doNotPerform of true would still indicate to NOT perform the action."
                        },
                        "timingTiming": {
                            "$ref": "#/definitions/Timing",
                            "description": "The period, timing or frequency upon which the described activity is to occur."
                        },
                        "timingDateTime": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The period, timing or frequency upon which the described activity is to occur."
                        },
                        "timingAge": {
                            "$ref": "#/definitions/Age",
                            "description": "The period, timing or frequency upon which the described activity is to occur."
                        },
                        "timingPeriod": {
                            "$ref": "#/definitions/Period",
                            "description": "The period, timing or frequency upon which the described activity is to occur."
                        },
                        "timingRange": {
                            "$ref": "#/definitions/Range",
                            "description": "The period, timing or frequency upon which the described activity is to occur."
                        },
                        "timingDuration": {
                            "$ref": "#/definitions/Duration",
                            "description": "The period, timing or frequency upon which the described activity is to occur."
                        },
                        "location": {
                            "$ref": "#/definitions/Reference",
                            "description": "Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc."
                        },
                        "participant": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityDefinition_Participant",
                                "description": "Indicates who should participate in performing the action described."
                            }
                        },
                        "productReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Identifies the food, drug or other product being consumed or supplied in the activity."
                        },
                        "productCodeableConcept": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Identifies the food, drug or other product being consumed or supplied in the activity."
                        },
                        "quantity": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "Identifies the quantity expected to be consumed at once (per dose, per meal, etc.)."
                        },
                        "dosage": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dosage",
                                "description": "Provides detailed dosage instructions in the same way that they are described for MedicationRequest resources."
                            }
                        },
                        "bodySite": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "Indicates the sites on the subject's body where the procedure should be performed (I.e. the target sites)."
                            }
                        },
                        "specimenRequirement": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Defines specimen requirements for the action to be performed, such as required specimens for a lab test."
                            }
                        },
                        "observationRequirement": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Defines observation requirements for the action to be performed, such as body weight or surface area."
                            }
                        },
                        "observationResultRequirement": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Defines the observations that are expected to be produced by the action."
                            }
                        },
                        "transform": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input."
                        },
                        "dynamicValue": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityDefinition_DynamicValue",
                                "description": "Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient's weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the request resource that would contain the result."
                            }
                        }
                    }
                }
            ],
            "required": [
                "status"
            ],
            "example": {
                "resourceType": "ActivityDefinition",
                "meta": {
                    "versionId": "8bw4GOPKnw",
                    "lastUpdated": "2020-03-12T00:11:46.187-04:00",
                    "source": "2m3nOoTyaB",
                    "profile": [
                        "JLLCEA87gj"
                    ],
                    "security": [
                        {
                            "system": "yL4EX77tXm",
                            "version": "xWGxzKzxeF",
                            "code": "13KtzZJUCA",
                            "display": "40HCRfcFXg",
                            "userSelected": true
                        }
                    ],
                    "tag": [
                        {
                            "system": "Qy4SYNgqfA",
                            "version": "3Y1OmbX7_K",
                            "code": "96cBSDYeKK",
                            "display": "DT3oZmd7vU",
                            "userSelected": true
                        },
                        {
                            "code": "ibm/complete-mock"
                        }
                    ]
                },
                "implicitRules": "vs5lKEGmXa",
                "language": "ggAE0d29FC",
                "text": {
                    "status": "additional",
                    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"></div>"
                },
                "url": "gQiqpRGXlo",
                "identifier": [
                    {
                        "use": "official",
                        "type": {
                            "coding": [
                                {
                                    "system": "RaOUJzbZo5",
                                    "version": "RLugdfnOem",
                                    "code": "k5ujwFp7sN",
                                    "display": "wFlqruFQyc",
                                    "userSelected": true
                                }
                            ],
                            "text": "9XuiRVTGpd"
                        },
                        "system": "WyjnNxxTDQ",
                        "value": "7jLAurBZy6",
                        "period": {
                            "start": "2020-03-12T00:11:46.296-04:00",
                            "end": "2020-03-12T00:11:46.296-04:00"
                        }
                    }
                ],
                "version": "qjuG8AWNgX",
                "name": "mEXl2gChnB",
                "title": "zicw6gxTt3",
                "subtitle": "70IzAjHBiC",
                "status": "unknown",
                "experimental": true,
                "subjectCodeableConcept": {
                    "coding": [
                        {
                            "system": "jAQsp_Zejp",
                            "version": "Rk897JTgbl",
                            "code": "iklNDuK9vr",
                            "display": "A7aVA0NvW6",
                            "userSelected": true
                        }
                    ],
                    "text": "a6jn9mwMvT"
                },
                "date": "2020-03-12T00:11:46.308-04:00",
                "publisher": "iU8atuPbEH",
                "contact": [
                    {
                        "name": "HWr9nK75px",
                        "telecom": [
                            {
                                "system": "url",
                                "value": "UPaLijNSM_",
                                "use": "work",
                                "rank": 1839389399,
                                "period": {
                                    "start": "2020-03-12T00:11:46.191-04:00",
                                    "end": "2020-03-12T00:11:46.192-04:00"
                                }
                            }
                        ]
                    }
                ],
                "description": "av3lE1QG6z",
                "useContext": [
                    {
                        "code": {
                            "system": "feF9leRpDu",
                            "version": "AAEQWTM4pd",
                            "code": "lCGmGcGB1a",
                            "display": "GCzh78rskQ",
                            "userSelected": true
                        },
                        "valueCodeableConcept": {
                            "coding": [
                                {
                                    "system": "WaWjQsh_qn",
                                    "version": "nEQOLsLu_o",
                                    "code": "NtlG9Jz0Vz",
                                    "display": "Xrz3hpVC5b",
                                    "userSelected": true
                                }
                            ],
                            "text": "wfPTXwWFhy"
                        }
                    }
                ],
                "jurisdiction": [
                    {
                        "coding": [
                            {
                                "system": "HJjDPKj6N1",
                                "version": "PCC2rL5I1M",
                                "code": "IaUir2SGA5",
                                "display": "66nCN4j7Cu",
                                "userSelected": true
                            }
                        ],
                        "text": "QCRQude3EX"
                    }
                ],
                "purpose": "aLIkCwk_JX",
                "usage": "BIWTUX00b8",
                "copyright": "8C95QfCqcV",
                "approvalDate": "2020-03-12",
                "lastReviewDate": "2020-03-12",
                "effectivePeriod": {
                    "start": "2020-03-12T00:11:46.199-04:00",
                    "end": "2020-03-12T00:11:46.199-04:00"
                },
                "topic": [
                    {
                        "coding": [
                            {
                                "system": "0lxPpSEBu9",
                                "version": "ahp2gSVe7P",
                                "code": "Qh_9tGhdxU",
                                "display": "hsCcD9gXTZ",
                                "userSelected": true
                            }
                        ],
                        "text": "JowwOL4iq3"
                    }
                ],
                "author": [
                    {
                        "name": "qT2GAMXeox",
                        "telecom": [
                            {
                                "system": "other",
                                "value": "wWwKC5pmn0",
                                "use": "temp",
                                "rank": 2040985405,
                                "period": {
                                    "start": "2020-03-12T00:11:46.202-04:00",
                                    "end": "2020-03-12T00:11:46.202-04:00"
                                }
                            }
                        ]
                    }
                ],
                "editor": [
                    {
                        "name": "fcYQcwxAyD",
                        "telecom": [
                            {
                                "system": "email",
                                "value": "S3QuHn5Y98",
                                "use": "old",
                                "rank": 230699260,
                                "period": {
                                    "start": "2020-03-12T00:11:46.175-04:00",
                                    "end": "2020-03-12T00:11:46.176-04:00"
                                }
                            }
                        ]
                    }
                ],
                "reviewer": [
                    {
                        "name": "3PZagX8N4n",
                        "telecom": [
                            {
                                "system": "email",
                                "value": "8idS89qEM4",
                                "use": "work",
                                "rank": 755964701,
                                "period": {
                                    "start": "2020-03-12T00:11:46.203-04:00",
                                    "end": "2020-03-12T00:11:46.203-04:00"
                                }
                            }
                        ]
                    }
                ],
                "endorser": [
                    {
                        "name": "UI1E8P0UDF",
                        "telecom": [
                            {
                                "system": "other",
                                "value": "GQzbwDZjyn",
                                "use": "temp",
                                "rank": 884199109,
                                "period": {
                                    "start": "2020-03-12T00:11:46.205-04:00",
                                    "end": "2020-03-12T00:11:46.205-04:00"
                                }
                            }
                        ]
                    }
                ],
                "relatedArtifact": [
                    {
                        "type": "documentation",
                        "label": "ZtQDp2qzCE",
                        "display": "_63yKll6jz",
                        "citation": "mZZMj8k1N1",
                        "url": "67DPoDStnP",
                        "document": {
                            "contentType": "mCgDn3KBk7",
                            "language": "vdWPdAHtTn",
                            "data": "TgAyVRg=",
                            "url": "Kft28EJAlL",
                            "size": 764548086,
                            "hash": "bSt2HhA=",
                            "title": "HCJB5cy_sM",
                            "creation": "2020-03-12T00:11:46.305-04:00"
                        },
                        "resource": "pVhq7GAKfn"
                    }
                ],
                "library": [
                    "wi9Q0RpTpK"
                ],
                "kind": "CarePlan",
                "profile": "DYkCcXPR1S",
                "code": {
                    "coding": [
                        {
                            "system": "uUrLyQ9_zF",
                            "version": "_87iG9j_8J",
                            "code": "oygFREgR9j",
                            "display": "eF5VL4Kw8S",
                            "userSelected": true
                        }
                    ],
                    "text": "7hG2zpApeF"
                },
                "intent": "instance-order",
                "priority": "stat",
                "doNotPerform": true,
                "timingTiming": {
                    "event": [
                        "2020-03-12T00:11:46.262-04:00"
                    ],
                    "repeat": {
                        "boundsDuration": {
                            "value": 272664774695,
                            "comparator": "<=",
                            "unit": "QTKYymZ1Zu",
                            "system": "http://unitsofmeasure.org",
                            "code": "h"
                        },
                        "count": 1635635306,
                        "countMax": 231425318,
                        "duration": 366230309738,
                        "durationMax": 520001322360,
                        "durationUnit": "s",
                        "frequency": 655283740,
                        "frequencyMax": 613733457,
                        "period": 43609455698,
                        "periodMax": 384335768697,
                        "periodUnit": "mo",
                        "dayOfWeek": [
                            "sat"
                        ],
                        "when": [
                            "EVE"
                        ]
                    },
                    "code": {
                        "coding": [
                            {
                                "system": "LZOutOtWB6",
                                "version": "IAyuzB508c",
                                "code": "M2ujF7NWyc",
                                "display": "Wik9JDISze",
                                "userSelected": true
                            }
                        ],
                        "text": "_vP6zLhUfl"
                    }
                },
                "location": {
                    "reference": "Location/MGfpsRFL4H",
                    "type": "Location",
                    "identifier": {
                        "use": "temp",
                        "type": {
                            "coding": [
                                {
                                    "system": "xhZCxIdKN0",
                                    "version": "wlMxt5G6It",
                                    "code": "bf9pqUveps",
                                    "display": "bTPZ_r4kPU",
                                    "userSelected": true
                                }
                            ],
                            "text": "hoCvXulgop"
                        },
                        "system": "3Ez6ghtrSY",
                        "value": "ErB3e94sXn",
                        "period": {
                            "start": "2020-03-12T00:11:46.18-04:00",
                            "end": "2020-03-12T00:11:46.181-04:00"
                        }
                    },
                    "display": "q7vdf8tCcV"
                },
                "participant": [
                    {
                        "type": "practitioner",
                        "role": {
                            "coding": [
                                {
                                    "system": "re2BBnAlJE",
                                    "version": "t4wGcf2tCV",
                                    "code": "VPHtEle7d3",
                                    "display": "k1VdWchutA",
                                    "userSelected": true
                                }
                            ],
                            "text": "F92KPquok6"
                        }
                    }
                ],
                "productReference": {
                    "reference": "J0FNpPwf_L",
                    "type": "HE6SZxy036",
                    "identifier": {
                        "use": "secondary",
                        "type": {
                            "coding": [
                                {
                                    "system": "XdtbgTpAIZ",
                                    "version": "yjag5xhhT3",
                                    "code": "mOq0zLrse0",
                                    "display": "pd22Afvx6h",
                                    "userSelected": true
                                }
                            ],
                            "text": "7GpwYawF05"
                        },
                        "system": "qrQwtCt1ur",
                        "value": "KGOqgIelEj",
                        "period": {
                            "start": "2020-03-12T00:11:46.216-04:00",
                            "end": "2020-03-12T00:11:46.217-04:00"
                        }
                    },
                    "display": "PdTuheEVYW"
                },
                "quantity": {
                    "value": 923696739,
                    "unit": "iZHs1IzpG_",
                    "system": "vGsYyLUGDz",
                    "code": "Eo8dWGPWjh"
                },
                "dosage": [
                    {
                        "sequence": 212527578,
                        "text": "fhLzsQpdn6",
                        "additionalInstruction": [
                            {
                                "coding": [
                                    {
                                        "system": "2_0kqjDN3E",
                                        "version": "hF67V7ewED",
                                        "code": "nItJ_fX9To",
                                        "display": "hHmIw06173",
                                        "userSelected": true
                                    }
                                ],
                                "text": "ySM0HEctpD"
                            }
                        ],
                        "patientInstruction": "X8baxfA4Ab",
                        "timing": {
                            "event": [
                                "2020-03-12T00:11:46.291-04:00"
                            ],
                            "repeat": {
                                "boundsDuration": {
                                    "value": 288037952317,
                                    "comparator": "<=",
                                    "unit": "MlD7YgpXBu",
                                    "system": "http://unitsofmeasure.org",
                                    "code": "h"
                                },
                                "count": 1391303890,
                                "countMax": 1695941961,
                                "duration": 460584999775,
                                "durationMax": 430036047919,
                                "durationUnit": "a",
                                "frequency": 560858194,
                                "frequencyMax": 1261119012,
                                "period": 133664159606,
                                "periodMax": 353145739364,
                                "periodUnit": "min",
                                "dayOfWeek": [
                                    "tue"
                                ],
                                "when": [
                                    "ACV"
                                ]
                            },
                            "code": {
                                "coding": [
                                    {
                                        "system": "iZ8Tu0kJSS",
                                        "version": "taUm6dU53g",
                                        "code": "Y0zU3Hp1_G",
                                        "display": "XwprymNVCy",
                                        "userSelected": true
                                    }
                                ],
                                "text": "fVY82SrOf0"
                            }
                        },
                        "asNeededBoolean": true,
                        "site": {
                            "coding": [
                                {
                                    "system": "rpA6IVU1WY",
                                    "version": "cYiEfXHmIi",
                                    "code": "s2BzFRKMLx",
                                    "display": "_Jf2pRM0CH",
                                    "userSelected": true
                                }
                            ],
                            "text": "gY0gCN5NOK"
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "s87EvW5nTk",
                                    "version": "OfnlNDeWFW",
                                    "code": "CxIsm1jzXw",
                                    "display": "DDnRJX1bXw",
                                    "userSelected": true
                                }
                            ],
                            "text": "iOc4hBRm__"
                        },
                        "method": {
                            "coding": [
                                {
                                    "system": "lfuW30QrVM",
                                    "version": "n04flD2hQT",
                                    "code": "Fcfb5xFd5g",
                                    "display": "5vZrvK7uKY",
                                    "userSelected": true
                                }
                            ],
                            "text": "Fk5A7AVbEN"
                        },
                        "doseAndRate": [
                            {
                                "type": {
                                    "coding": [
                                        {
                                            "system": "PhZnEFOoCC",
                                            "version": "FaFp5QNV4q",
                                            "code": "MZyOKSjlkH",
                                            "display": "TDxVm2aofW",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "1glJf2F2UW"
                                },
                                "doseRange": {
                                    "low": {
                                        "value": 490600158519,
                                        "unit": "Y3aHDmFE9o",
                                        "system": "AKiIh_tPct",
                                        "code": "qpESWypR8Q"
                                    }
                                },
                                "rateRatio": {
                                    "numerator": {
                                        "value": 395779974521,
                                        "comparator": ">",
                                        "unit": "dewsk1kiO6",
                                        "system": "PWgeppJEsq",
                                        "code": "3NUj4o3imG"
                                    },
                                    "denominator": {
                                        "value": 529642778640,
                                        "comparator": "<=",
                                        "unit": "YvSkgSnXmf",
                                        "system": "WnGNWgt9Cc",
                                        "code": "zTbG6_zCmO"
                                    }
                                }
                            }
                        ],
                        "maxDosePerPeriod": {
                            "numerator": {
                                "value": 379436217712,
                                "comparator": "<=",
                                "unit": "4Jdm14HoyE",
                                "system": "mkXpTwUPPj",
                                "code": "NTb_IWpKcm"
                            },
                            "denominator": {
                                "value": 345582340469,
                                "comparator": "<",
                                "unit": "KPgwD2TZ_1",
                                "system": "OnrDr917S3",
                                "code": "67SgnEJsbb"
                            }
                        },
                        "maxDosePerAdministration": {
                            "value": 511359648557,
                            "unit": "1ZUM10p0lm",
                            "system": "v_v50doYe9",
                            "code": "UF6EzlEirs"
                        },
                        "maxDosePerLifetime": {
                            "value": 545552797484,
                            "unit": "9exYIOKuHg",
                            "system": "HRsP5GPhg9",
                            "code": "8pXSSe5Ylj"
                        }
                    }
                ],
                "bodySite": [
                    {
                        "coding": [
                            {
                                "system": "dBPJTT1vCt",
                                "version": "f0YYFoCsud",
                                "code": "TZGe7mI4vc",
                                "display": "iOlZSLegc4",
                                "userSelected": true
                            }
                        ],
                        "text": "yRiC0rmEEP"
                    }
                ],
                "specimenRequirement": [
                    {
                        "reference": "7Wz_OjYP_W",
                        "type": "bengpYg2y8",
                        "identifier": {
                            "use": "temp",
                            "type": {
                                "coding": [
                                    {
                                        "system": "XtuQLCQb0P",
                                        "version": "GVZ5QiRnEi",
                                        "code": "2hbmeTIZp0",
                                        "display": "EilAtnNUZb",
                                        "userSelected": true
                                    }
                                ],
                                "text": "lEGWfZVfao"
                            },
                            "system": "IZNK97yb1r",
                            "value": "R2tbv8Hjqr",
                            "period": {
                                "start": "2020-03-12T00:11:46.222-04:00",
                                "end": "2020-03-12T00:11:46.222-04:00"
                            }
                        },
                        "display": "myPoQbTnYM"
                    }
                ],
                "observationRequirement": [
                    {
                        "reference": "pxhVsiRwBw",
                        "type": "KuAPYwxh_0",
                        "identifier": {
                            "use": "temp",
                            "type": {
                                "coding": [
                                    {
                                        "system": "XnXMN7RX5y",
                                        "version": "Jh80LdJRkv",
                                        "code": "jUJr4tshnb",
                                        "display": "AnalHf47Ls",
                                        "userSelected": true
                                    }
                                ],
                                "text": "XtEzW6KE7t"
                            },
                            "system": "a_jubtJEy8",
                            "value": "DVoj1mZ22b",
                            "period": {
                                "start": "2020-03-12T00:11:46.228-04:00",
                                "end": "2020-03-12T00:11:46.228-04:00"
                            }
                        },
                        "display": "34yi6NFn5I"
                    }
                ],
                "observationResultRequirement": [
                    {
                        "reference": "4h4XzeaWmh",
                        "type": "aQm4QIEGNG",
                        "identifier": {
                            "use": "old",
                            "type": {
                                "coding": [
                                    {
                                        "system": "ExPWEN8Q0e",
                                        "version": "BrcKpkT6Jh",
                                        "code": "SB02iW47h4",
                                        "display": "MpfkucN8Uf",
                                        "userSelected": true
                                    }
                                ],
                                "text": "bTKOACkgaG"
                            },
                            "system": "gQmy5f1_6Q",
                            "value": "0btd7ziHII",
                            "period": {
                                "start": "2020-03-12T00:11:46.233-04:00",
                                "end": "2020-03-12T00:11:46.235-04:00"
                            }
                        },
                        "display": "l8EwbtXr01"
                    }
                ],
                "transform": "UUNpw5YCeS",
                "dynamicValue": [
                    {
                        "path": "_1BvWKWObF",
                        "expression": {
                            "description": "DfQA2OoX9a",
                            "name": "b8NrZ7tkSZ",
                            "language": "yK8sJKyemc",
                            "expression": "mzeMWLqJN1",
                            "reference": "6G76Cv0AvL"
                        }
                    }
                ]
            }
        },
        "Bundle": {
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                },
                {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "$ref": "#/definitions/Identifier",
                            "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server."
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "document",
                                "message",
                                "transaction",
                                "transaction-response",
                                "batch",
                                "batch-response",
                                "history",
                                "searchset",
                                "collection"
                            ],
                            "description": "Indicates the purpose of this bundle - how it is intended to be used."
                        },
                        "timestamp": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle."
                        },
                        "total": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle."
                        },
                        "link": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bundle_Link",
                                "description": "A series of links that provide context to this bundle."
                            }
                        },
                        "entry": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bundle_Entry",
                                "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only)."
                            }
                        },
                        "signature": {
                            "$ref": "#/definitions/Signature",
                            "description": "Digital Signature - base64 encoded. XML-DSig or a JWT."
                        }
                    }
                }
            ],
            "required": [
                "type"
            ],
            "example": {
                "resourceType": "Bundle",
                "meta": {
                    "versionId": "exaha1GMZU",
                    "lastUpdated": "2020-03-12T00:11:47.779-04:00",
                    "source": "OscBE5P0oL",
                    "profile": [
                        "2t1_PYz6sb"
                    ],
                    "security": [
                        {
                            "system": "__ZQLAVVwf",
                            "version": "VLbtqKcbsY",
                            "code": "VUlDjytwgy",
                            "display": "qiSsBMDgPt",
                            "userSelected": true
                        }
                    ],
                    "tag": [
                        {
                            "system": "zjCxD2PaBs",
                            "version": "rzU1dChGRU",
                            "code": "T_fA90_uZ3",
                            "display": "lX3NJdEblQ",
                            "userSelected": true
                        },
                        {
                            "code": "ibm/complete-mock"
                        }
                    ]
                },
                "implicitRules": "vor6NZfU_z",
                "language": "L2CvMvoQCf",
                "identifier": {
                    "use": "temp",
                    "type": {
                        "coding": [
                            {
                                "system": "2KSvg9_FAi",
                                "version": "gGp8DOk9J1",
                                "code": "mfTsOuaMha",
                                "display": "oWF_kySdMa",
                                "userSelected": true
                            }
                        ],
                        "text": "JCfLMefieh"
                    },
                    "system": "OD8o0wUurR",
                    "value": "rB39S_eWKm",
                    "period": {
                        "start": "2020-03-12T00:11:47.781-04:00",
                        "end": "2020-03-12T00:11:47.781-04:00"
                    }
                },
                "type": "message",
                "timestamp": "2020-03-12T00:11:47.768-04:00",
                "total": 253899444,
                "link": [
                    {
                        "relation": "7ntmg3QgsB",
                        "url": "yqZC1h4OiP"
                    }
                ],
                "entry": [
                    {
                        "link": [
                            {
                                "relation": "BYqAgl7fxn",
                                "url": "FjYy1I_fo0"
                            }
                        ],
                        "fullUrl": "jRHNMRSGoH",
                        "search": {
                            "mode": "outcome",
                            "score": 215939698769
                        },
                        "request": {
                            "method": "HEAD",
                            "url": "fsGmEqxt_V",
                            "ifNoneMatch": "9Ce9vVtTEJ",
                            "ifModifiedSince": "2020-03-12T00:11:47.776-04:00",
                            "ifMatch": "PtLujM597v",
                            "ifNoneExist": "thVohqaRoO"
                        },
                        "response": {
                            "status": "Vz647bKzDX",
                            "location": "vG6ZG5JY3n",
                            "etag": "UAy7mNeNeo",
                            "lastModified": "2020-03-12T00:11:47.773-04:00"
                        }
                    }
                ],
                "signature": {
                    "type": [
                        {
                            "system": "UXJhVBJtsw",
                            "version": "dSN1eoXw7X",
                            "code": "7n8GNkS7ty",
                            "display": "Ff82O7MvgK",
                            "userSelected": true
                        }
                    ],
                    "when": "2020-03-12T00:11:47.767-04:00",
                    "who": {
                        "reference": "Practitioner/8Jt_8Rtofu",
                        "type": "Practitioner",
                        "identifier": {
                            "use": "secondary",
                            "type": {
                                "coding": [
                                    {
                                        "system": "aOvIofeYmD",
                                        "version": "mNBmEi5RDA",
                                        "code": "sM5gtqK3Xw",
                                        "display": "aOf6nJImxy",
                                        "userSelected": true
                                    }
                                ],
                                "text": "zaOFAoPxBA"
                            },
                            "system": "C70kG_5CcM",
                            "value": "TYMT3hKJFR",
                            "period": {
                                "start": "2020-03-12T00:11:47.765-04:00",
                                "end": "2020-03-12T00:11:47.765-04:00"
                            }
                        },
                        "display": "5vUkPEw2_I"
                    },
                    "onBehalfOf": {
                        "reference": "Practitioner/PEch7CxGIg",
                        "type": "Practitioner",
                        "identifier": {
                            "use": "usual",
                            "type": {
                                "coding": [
                                    {
                                        "system": "ixnevWoHGy",
                                        "version": "hJQzXghlpb",
                                        "code": "h6NurXxnyH",
                                        "display": "C0fDviMSsU",
                                        "userSelected": true
                                    }
                                ],
                                "text": "izhrMjXk74"
                            },
                            "system": "giGNRU5rWU",
                            "value": "e7_ezY1vVp",
                            "period": {
                                "start": "2020-03-12T00:11:47.767-04:00",
                                "end": "2020-03-12T00:11:47.767-04:00"
                            }
                        },
                        "display": "nWuUixICQd"
                    },
                    "targetFormat": "F93ISQKaDY",
                    "sigFormat": "Qx2S3AEiMQ",
                    "data": "AGxIVG4="
                }
            }
        },
        "OperationOutcome": {
            "allOf": [
                {
                    "$ref": "#/definitions/DomainResource"
                },
                {
                    "type": "object",
                    "properties": {
                        "issue": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OperationOutcome_Issue",
                                "description": "An error, warning, or information message that results from a system action."
                            }
                        }
                    }
                }
            ],
            "required": [
                "issue"
            ],
            "example": {
                "resourceType": "OperationOutcome",
                "meta": {
                    "versionId": "aj7xYfDKGG",
                    "lastUpdated": "2020-03-12T00:11:56.482-04:00",
                    "source": "ZqswRdBz2V",
                    "profile": [
                        "7MtlUHdgF3"
                    ],
                    "security": [
                        {
                            "system": "eBZLDvfQS6",
                            "version": "3loXo6Bekk",
                            "code": "fApLgubn5v",
                            "display": "hGDoUOaTiY",
                            "userSelected": true
                        }
                    ],
                    "tag": [
                        {
                            "system": "d6ZKFrRy9C",
                            "version": "co9wqQZDjO",
                            "code": "Z2JT_ZxmeR",
                            "display": "f5JMtds3fb",
                            "userSelected": true
                        },
                        {
                            "code": "ibm/complete-mock"
                        }
                    ]
                },
                "implicitRules": "FwNANOTUkD",
                "language": "iDvESiu0cB",
                "text": {
                    "status": "extensions",
                    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"></div>"
                },
                "issue": [
                    {
                        "severity": "warning",
                        "code": "invariant",
                        "details": {
                            "coding": [
                                {
                                    "system": "9TiBhtaNhv",
                                    "version": "38XIrYkjYf",
                                    "code": "s4dzxZ4dsW",
                                    "display": "tu3Q0RYWRq",
                                    "userSelected": true
                                }
                            ],
                            "text": "qW3nzpKNue"
                        },
                        "diagnostics": "4zXKgm6Eae",
                        "location": [
                            "EmMlBkbb8W"
                        ],
                        "expression": [
                            "bSBqh22fAT"
                        ]
                    }
                ]
            }
        },
        "ActivityDefinition_DynamicValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details)."
                        },
                        "expression": {
                            "$ref": "#/definitions/Expression",
                            "description": "An expression specifying the value of the customized element."
                        }
                    }
                }
            ],
            "required": [
                "path",
                "expression"
            ]
        },
        "ActivityDefinition_Participant": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "patient",
                                "practitioner",
                                "related-person",
                                "device"
                            ],
                            "description": "The type of participant in the action."
                        },
                        "role": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "The role the participant should play in performing the described action."
                        }
                    }
                }
            ],
            "required": [
                "type"
            ]
        },
        "Bundle_Entry": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "link": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bundle_Link",
                                "description": "A series of links that provide context to this entry."
                            }
                        },
                        "fullUrl": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: \n* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)\n* Results from operations might involve resources that are not identified."
                        },
                        "resource": {
                            "$ref": "#/definitions/Resource",
                            "description": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type."
                        },
                        "search": {
                            "$ref": "#/definitions/Bundle_Entry_Search",
                            "description": "Information about the search process that lead to the creation of this entry."
                        },
                        "request": {
                            "$ref": "#/definitions/Bundle_Entry_Request",
                            "description": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry."
                        },
                        "response": {
                            "$ref": "#/definitions/Bundle_Entry_Response",
                            "description": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history."
                        }
                    }
                }
            ]
        },
        "Bundle_Entry_Response": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code."
                        },
                        "location": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The location header created by processing this operation, populated if the operation returns a location."
                        },
                        "etag": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency))."
                        },
                        "lastModified": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "The date/time that the resource was modified on the server."
                        },
                        "outcome": {
                            "$ref": "#/definitions/Resource",
                            "description": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction."
                        }
                    }
                }
            ],
            "required": [
                "status"
            ]
        },
        "Bundle_Entry_Request": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "method": {
                            "type": "string",
                            "enum": [
                                "GET",
                                "HEAD",
                                "POST",
                                "PUT",
                                "DELETE",
                                "PATCH"
                            ],
                            "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred."
                        },
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The URL for this entry, relative to the root (the address to which the request is posted)."
                        },
                        "ifNoneMatch": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread)."
                        },
                        "ifModifiedSince": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread)."
                        },
                        "ifMatch": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency)."
                        },
                        "ifNoneExist": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\")."
                        }
                    }
                }
            ],
            "required": [
                "method",
                "url"
            ]
        },
        "Bundle_Entry_Search": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "mode": {
                            "type": "string",
                            "enum": [
                                "match",
                                "include",
                                "outcome"
                            ],
                            "description": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process."
                        },
                        "score": {
                            "type": "number",
                            "description": "When searching, the server's search ranking score for the entry."
                        }
                    }
                }
            ]
        },
        "Bundle_Link": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "relation": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1)."
                        },
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The reference details for the link."
                        }
                    }
                }
            ],
            "required": [
                "relation",
                "url"
            ]
        },
        "OperationOutcome_Issue": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "severity": {
                            "type": "string",
                            "enum": [
                                "fatal",
                                "error",
                                "warning",
                                "information"
                            ],
                            "description": "Indicates whether the issue indicates a variation from successful processing."
                        },
                        "code": {
                            "type": "string",
                            "enum": [
                                "invalid",
                                "structure",
                                "required",
                                "value",
                                "invariant",
                                "security",
                                "login",
                                "unknown",
                                "expired",
                                "forbidden",
                                "suppressed",
                                "processing",
                                "not-supported",
                                "duplicate",
                                "multiple-matches",
                                "not-found",
                                "deleted",
                                "too-long",
                                "code-invalid",
                                "extension",
                                "too-costly",
                                "business-rule",
                                "conflict",
                                "transient",
                                "lock-error",
                                "no-store",
                                "exception",
                                "timeout",
                                "incomplete",
                                "throttled",
                                "informational"
                            ],
                            "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element."
                        },
                        "details": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error."
                        },
                        "diagnostics": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Additional diagnostic information about the issue."
                        },
                        "location": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name."
                            }
                        },
                        "expression": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised."
                            }
                        }
                    }
                }
            ],
            "required": [
                "severity",
                "code"
            ]
        },
        "Element": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Extension",
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "example": [
                            {
                                "url": "http://example.com",
                                "valueString": "text value"
                            }
                        ]
                    }
                }
            }
        },
        "BackboneElement": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "modifierExtension": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extension",
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
                            }
                        }
                    }
                }
            ]
        },
        "Address": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "use": {
                            "type": "string",
                            "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "billing"
                            ],
                            "description": "The purpose of this address."
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "postal",
                                "physical",
                                "both"
                            ],
                            "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both."
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
                        },
                        "line": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information."
                            }
                        },
                        "city": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The name of the city, town, suburb, village or other community or delivery center."
                        },
                        "district": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The name of the administrative area (county)."
                        },
                        "state": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
                        },
                        "postalCode": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A postal code designating a region defined by the postal service."
                        },
                        "country": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Country - a nation as commonly understood or generally accepted."
                        },
                        "period": {
                            "$ref": "#/definitions/Period",
                            "description": "Time period when address was/is in use."
                        }
                    }
                }
            ]
        },
        "Age": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "Annotation": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "authorReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "The individual responsible for making the annotation."
                        },
                        "authorString": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The individual responsible for making the annotation."
                        },
                        "time": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "Indicates when this particular annotation was made."
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The text of the annotation in markdown format."
                        }
                    }
                }
            ],
            "required": [
                "text"
            ]
        },
        "Attachment": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "contentType": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                        },
                        "language": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "The human language of the content. The value can be any valid value according to BCP 47."
                        },
                        "data": {
                            "type": "string",
                            "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                            "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."
                        },
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A location where the data can be accessed."
                        },
                        "size": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                        },
                        "hash": {
                            "type": "string",
                            "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                            "description": "The calculated hash of the data using SHA-1. Represented using base64."
                        },
                        "title": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A label or set of text to display in place of the data."
                        },
                        "creation": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The date that the attachment was first created."
                        }
                    }
                }
            ]
        },
        "CodeableConcept": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "coding": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coding",
                                "description": "A reference to a code defined by a terminology system."
                            }
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                        }
                    }
                }
            ]
        },
        "Coding": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                        },
                        "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                        },
                        "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                        },
                        "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                        },
                        "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                        }
                    }
                }
            ]
        },
        "ContactPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "system": {
                            "type": "string",
                            "enum": [
                                "phone",
                                "fax",
                                "email",
                                "pager",
                                "url",
                                "sms",
                                "other"
                            ],
                            "description": "Telecommunications form for contact point - what communications system is required to make use of the contact."
                        },
                        "value": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                        },
                        "use": {
                            "type": "string",
                            "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "mobile"
                            ],
                            "description": "Identifies the purpose for the contact point."
                        },
                        "rank": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                        },
                        "period": {
                            "$ref": "#/definitions/Period",
                            "description": "Time period when the contact point was/is in use."
                        }
                    }
                }
            ]
        },
        "Count": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "Distance": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "Duration": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "HumanName": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "use": {
                            "type": "string",
                            "enum": [
                                "usual",
                                "official",
                                "temp",
                                "nickname",
                                "anonymous",
                                "old",
                                "maiden"
                            ],
                            "description": "Identifies the purpose for this name."
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
                        },
                        "family": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
                        },
                        "given": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Given name."
                            }
                        },
                        "prefix": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name."
                            }
                        },
                        "suffix": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name."
                            }
                        },
                        "period": {
                            "$ref": "#/definitions/Period",
                            "description": "Indicates the period of time when this name was valid for the named person."
                        }
                    }
                }
            ]
        },
        "Identifier": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "use": {
                            "type": "string",
                            "enum": [
                                "usual",
                                "official",
                                "temp",
                                "secondary",
                                "old"
                            ],
                            "description": "The purpose of this identifier."
                        },
                        "type": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                        },
                        "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                        },
                        "value": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                        },
                        "period": {
                            "$ref": "#/definitions/Period",
                            "description": "Time period during which identifier is/was valid for use."
                        },
                        "assigner": {
                            "$ref": "#/definitions/Reference",
                            "description": "Organization that issued/manages the identifier.",
                            "example": {
                                "reference": "Organization/123",
                                "type": "Organization",
                                "display": "The Assigning Organization"
                            }
                        }
                    }
                }
            ]
        },
        "Money": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "description": "Numerical value (with implicit precision)."
                        },
                        "currency": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "ISO 4217 Currency Code."
                        }
                    }
                }
            ]
        },
        "MoneyQuantity": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "Period": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "start": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The start of the period. The boundary is inclusive."
                        },
                        "end": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                        }
                    }
                }
            ]
        },
        "Quantity": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                        },
                        "comparator": {
                            "type": "string",
                            "enum": [
                                "<",
                                "<=",
                                ">=",
                                ">"
                            ],
                            "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                        },
                        "unit": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human-readable form of the unit."
                        },
                        "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the system that provides the coded form of the unit."
                        },
                        "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A computer processable form of the unit in some unit representation system."
                        }
                    }
                }
            ]
        },
        "Range": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "low": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "The low limit. The boundary is inclusive."
                        },
                        "high": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "The high limit. The boundary is inclusive."
                        }
                    }
                }
            ]
        },
        "Ratio": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "numerator": {
                            "$ref": "#/definitions/Quantity",
                            "description": "The value of the numerator."
                        },
                        "denominator": {
                            "$ref": "#/definitions/Quantity",
                            "description": "The value of the denominator."
                        }
                    }
                }
            ]
        },
        "Reference": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "reference": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                        },
                        "type": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                        },
                        "identifier": {
                            "$ref": "#/definitions/Identifier",
                            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                        },
                        "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                        }
                    }
                }
            ]
        },
        "SampledData": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "origin": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
                        },
                        "period": {
                            "type": "number",
                            "description": "The length of time between sampling times, measured in milliseconds."
                        },
                        "factor": {
                            "type": "number",
                            "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                        },
                        "lowerLimit": {
                            "type": "number",
                            "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                        },
                        "upperLimit": {
                            "type": "number",
                            "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                        },
                        "dimensions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once."
                        },
                        "data": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                        }
                    }
                }
            ],
            "required": [
                "origin",
                "period",
                "dimensions"
            ]
        },
        "SimpleQuantity": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "Signature": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coding",
                                "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document."
                            }
                        },
                        "when": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "When the digital signature was signed."
                        },
                        "who": {
                            "$ref": "#/definitions/Reference",
                            "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key)."
                        },
                        "onBehalfOf": {
                            "$ref": "#/definitions/Reference",
                            "description": "A reference to an application-usable description of the identity that is represented by the signature."
                        },
                        "targetFormat": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A mime type that indicates the technical format of the target resources signed by the signature."
                        },
                        "sigFormat": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
                        },
                        "data": {
                            "type": "string",
                            "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                            "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
                        }
                    }
                }
            ],
            "required": [
                "type",
                "when",
                "who"
            ]
        },
        "Timing": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "event": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                "description": "Identifies specific times when the event occurs."
                            }
                        },
                        "repeat": {
                            "$ref": "#/definitions/Timing_Repeat",
                            "description": "A set of rules that describe when the event is scheduled."
                        },
                        "code": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
                        }
                    }
                }
            ]
        },
        "Timing_Repeat": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "boundsDuration": {
                            "$ref": "#/definitions/Duration",
                            "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
                        },
                        "boundsRange": {
                            "$ref": "#/definitions/Range",
                            "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
                        },
                        "boundsPeriod": {
                            "$ref": "#/definitions/Period",
                            "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
                        },
                        "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
                        },
                        "countMax": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times."
                        },
                        "duration": {
                            "type": "number",
                            "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
                        },
                        "durationMax": {
                            "type": "number",
                            "description": "If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length."
                        },
                        "durationUnit": {
                            "type": "string",
                            "enum": [
                                "s",
                                "min",
                                "h",
                                "d",
                                "wk",
                                "mo",
                                "a"
                            ],
                            "description": "The units of time for the duration, in UCUM units."
                        },
                        "frequency": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
                        },
                        "frequencyMax": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range."
                        },
                        "period": {
                            "type": "number",
                            "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
                        },
                        "periodMax": {
                            "type": "number",
                            "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3-5 days."
                        },
                        "periodUnit": {
                            "type": "string",
                            "enum": [
                                "s",
                                "min",
                                "h",
                                "d",
                                "wk",
                                "mo",
                                "a"
                            ],
                            "description": "The units of time for the period in UCUM units."
                        },
                        "dayOfWeek": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "mon",
                                    "tue",
                                    "wed",
                                    "thu",
                                    "fri",
                                    "sat",
                                    "sun"
                                ],
                                "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                            }
                        },
                        "timeOfDay": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                                "description": "Specified time of day for action to take place."
                            }
                        },
                        "when": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "MORN",
                                    "MORN.early",
                                    "MORN.late",
                                    "NOON",
                                    "AFT",
                                    "AFT.early",
                                    "AFT.late",
                                    "EVE",
                                    "EVE.early",
                                    "EVE.late",
                                    "NIGHT",
                                    "PHS",
                                    "HS",
                                    "WAKE",
                                    "C",
                                    "CM",
                                    "CD",
                                    "CV",
                                    "AC",
                                    "ACM",
                                    "ACD",
                                    "ACV",
                                    "PC",
                                    "PCM",
                                    "PCD",
                                    "PCV"
                                ],
                                "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
                        }
                    }
                }
            ]
        },
        "ContactDetail": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The name of an individual to contact."
                        },
                        "telecom": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContactPoint",
                                "description": "The contact details for the individual (if a name was provided) or the organization."
                            }
                        }
                    }
                }
            ]
        },
        "Expression": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
                        },
                        "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                            "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
                        },
                        "language": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "The media type of the language for the expression."
                        },
                        "expression": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "An expression in the specified language that returns a value."
                        },
                        "reference": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A URI that defines where the expression is found."
                        }
                    }
                }
            ],
            "required": [
                "language"
            ]
        },
        "ParameterDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts."
                        },
                        "use": {
                            "type": "string",
                            "enum": [
                                "in",
                                "out"
                            ],
                            "description": "Whether the parameter is input or output for the module."
                        },
                        "min": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum number of times this parameter SHALL appear in the request or response."
                        },
                        "max": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The maximum number of times this element is permitted to appear in the request or response."
                        },
                        "documentation": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A brief discussion of what the parameter is for and how it is used by the module."
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Address",
                                "Age",
                                "Annotation",
                                "Attachment",
                                "BackboneElement",
                                "CodeableConcept",
                                "Coding",
                                "ContactDetail",
                                "ContactPoint",
                                "Contributor",
                                "Count",
                                "DataRequirement",
                                "Distance",
                                "Dosage",
                                "Duration",
                                "Element",
                                "ElementDefinition",
                                "Expression",
                                "Extension",
                                "HumanName",
                                "Identifier",
                                "MarketingStatus",
                                "Meta",
                                "Money",
                                "MoneyQuantity",
                                "Narrative",
                                "ParameterDefinition",
                                "Period",
                                "Population",
                                "ProdCharacteristic",
                                "ProductShelfLife",
                                "Quantity",
                                "Range",
                                "Ratio",
                                "Reference",
                                "RelatedArtifact",
                                "SampledData",
                                "Signature",
                                "SimpleQuantity",
                                "SubstanceAmount",
                                "Timing",
                                "TriggerDefinition",
                                "UsageContext",
                                "base64Binary",
                                "boolean",
                                "canonical",
                                "code",
                                "date",
                                "dateTime",
                                "decimal",
                                "id",
                                "instant",
                                "integer",
                                "markdown",
                                "oid",
                                "positiveInt",
                                "string",
                                "time",
                                "unsignedInt",
                                "uri",
                                "url",
                                "uuid",
                                "xhtml",
                                "Account",
                                "ActivityDefinition",
                                "AdverseEvent",
                                "AllergyIntolerance",
                                "Appointment",
                                "AppointmentResponse",
                                "AuditEvent",
                                "Basic",
                                "Binary",
                                "BiologicallyDerivedProduct",
                                "BodyStructure",
                                "Bundle",
                                "CapabilityStatement",
                                "CarePlan",
                                "CareTeam",
                                "CatalogEntry",
                                "ChargeItem",
                                "ChargeItemDefinition",
                                "Claim",
                                "ClaimResponse",
                                "ClinicalImpression",
                                "CodeSystem",
                                "Communication",
                                "CommunicationRequest",
                                "CompartmentDefinition",
                                "Composition",
                                "ConceptMap",
                                "Condition",
                                "Consent",
                                "Contract",
                                "Coverage",
                                "CoverageEligibilityRequest",
                                "CoverageEligibilityResponse",
                                "DetectedIssue",
                                "Device",
                                "DeviceDefinition",
                                "DeviceMetric",
                                "DeviceRequest",
                                "DeviceUseStatement",
                                "DiagnosticReport",
                                "DocumentManifest",
                                "DocumentReference",
                                "DomainResource",
                                "EffectEvidenceSynthesis",
                                "Encounter",
                                "Endpoint",
                                "EnrollmentRequest",
                                "EnrollmentResponse",
                                "EpisodeOfCare",
                                "EventDefinition",
                                "Evidence",
                                "EvidenceVariable",
                                "ExampleScenario",
                                "ExplanationOfBenefit",
                                "FamilyMemberHistory",
                                "Flag",
                                "Goal",
                                "GraphDefinition",
                                "Group",
                                "GuidanceResponse",
                                "HealthcareService",
                                "ImagingStudy",
                                "Immunization",
                                "ImmunizationEvaluation",
                                "ImmunizationRecommendation",
                                "ImplementationGuide",
                                "InsurancePlan",
                                "Invoice",
                                "Library",
                                "Linkage",
                                "List",
                                "Location",
                                "Measure",
                                "MeasureReport",
                                "Media",
                                "Medication",
                                "MedicationAdministration",
                                "MedicationDispense",
                                "MedicationKnowledge",
                                "MedicationRequest",
                                "MedicationStatement",
                                "MedicinalProduct",
                                "MedicinalProductAuthorization",
                                "MedicinalProductContraindication",
                                "MedicinalProductIndication",
                                "MedicinalProductIngredient",
                                "MedicinalProductInteraction",
                                "MedicinalProductManufactured",
                                "MedicinalProductPackaged",
                                "MedicinalProductPharmaceutical",
                                "MedicinalProductUndesirableEffect",
                                "MessageDefinition",
                                "MessageHeader",
                                "MolecularSequence",
                                "NamingSystem",
                                "NutritionOrder",
                                "Observation",
                                "ObservationDefinition",
                                "OperationDefinition",
                                "OperationOutcome",
                                "Organization",
                                "OrganizationAffiliation",
                                "Parameters",
                                "Patient",
                                "PaymentNotice",
                                "PaymentReconciliation",
                                "Person",
                                "PlanDefinition",
                                "Practitioner",
                                "PractitionerRole",
                                "Procedure",
                                "Provenance",
                                "Questionnaire",
                                "QuestionnaireResponse",
                                "RelatedPerson",
                                "RequestGroup",
                                "ResearchDefinition",
                                "ResearchElementDefinition",
                                "ResearchStudy",
                                "ResearchSubject",
                                "Resource",
                                "RiskAssessment",
                                "RiskEvidenceSynthesis",
                                "Schedule",
                                "SearchParameter",
                                "ServiceRequest",
                                "Slot",
                                "Specimen",
                                "SpecimenDefinition",
                                "StructureDefinition",
                                "StructureMap",
                                "Subscription",
                                "Substance",
                                "SubstanceNucleicAcid",
                                "SubstancePolymer",
                                "SubstanceProtein",
                                "SubstanceReferenceInformation",
                                "SubstanceSourceMaterial",
                                "SubstanceSpecification",
                                "SupplyDelivery",
                                "SupplyRequest",
                                "Task",
                                "TerminologyCapabilities",
                                "TestReport",
                                "TestScript",
                                "ValueSet",
                                "VerificationResult",
                                "VisionPrescription",
                                "Type",
                                "Any"
                            ],
                            "description": "The type of the parameter."
                        },
                        "profile": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to."
                        }
                    }
                }
            ],
            "required": [
                "use",
                "type"
            ]
        },
        "RelatedArtifact": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "documentation",
                                "justification",
                                "citation",
                                "predecessor",
                                "successor",
                                "derived-from",
                                "depends-on",
                                "composed-of"
                            ],
                            "description": "The type of relationship to the related artifact."
                        },
                        "label": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                        },
                        "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                        },
                        "citation": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                        },
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A url for the artifact that can be followed to access the actual content."
                        },
                        "document": {
                            "$ref": "#/definitions/Attachment",
                            "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
                        },
                        "resource": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                        }
                    }
                }
            ],
            "required": [
                "type"
            ]
        },
        "UsageContext": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "code": {
                            "$ref": "#/definitions/Coding",
                            "description": "A code that identifies the type of context being specified by this usage context."
                        },
                        "valueCodeableConcept": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                        },
                        "valueQuantity": {
                            "$ref": "#/definitions/Quantity",
                            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                        },
                        "valueRange": {
                            "$ref": "#/definitions/Range",
                            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                        },
                        "valueReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                        }
                    }
                }
            ],
            "required": [
                "code"
            ]
        },
        "Dosage": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "sequence": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Indicates the order in which the dosage instructions should be applied or interpreted."
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Free text dosage instructions e.g. SIG."
                        },
                        "additionalInstruction": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\")."
                            }
                        },
                        "patientInstruction": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Instructions in terms that are understood by the patient or consumer."
                        },
                        "timing": {
                            "$ref": "#/definitions/Timing",
                            "description": "When medication should be administered."
                        },
                        "asNeededBoolean": {
                            "type": "boolean",
                            "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
                        },
                        "asNeededCodeableConcept": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
                        },
                        "site": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Body site to administer to."
                        },
                        "route": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "How drug should enter body."
                        },
                        "method": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Technique for administering medication."
                        },
                        "doseAndRate": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dosage_DoseAndRate",
                                "description": "The amount of medication administered."
                            }
                        },
                        "maxDosePerPeriod": {
                            "$ref": "#/definitions/Ratio",
                            "description": "Upper limit on medication per unit of time."
                        },
                        "maxDosePerAdministration": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "Upper limit on medication per administration."
                        },
                        "maxDosePerLifetime": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "Upper limit on medication per lifetime of the patient."
                        }
                    }
                }
            ]
        },
        "Dosage_DoseAndRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "The kind of dose or rate specified, for example, ordered or calculated."
                        },
                        "doseRange": {
                            "$ref": "#/definitions/Range",
                            "description": "Amount of medication per dose."
                        },
                        "doseQuantity": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "Amount of medication per dose."
                        },
                        "rateRatio": {
                            "$ref": "#/definitions/Ratio",
                            "description": "Amount of medication per unit of time."
                        },
                        "rateRange": {
                            "$ref": "#/definitions/Range",
                            "description": "Amount of medication per unit of time."
                        },
                        "rateQuantity": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "Amount of medication per unit of time."
                        }
                    }
                }
            ]
        },
        "Meta": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "versionId": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                            "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                        },
                        "lastUpdated": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "When the resource last changed - e.g. when the version changed."
                        },
                        "source": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                        },
                        "profile": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition-definitions.html#StructureDefinition.url)."
                            }
                        },
                        "security": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coding",
                                "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure."
                            }
                        },
                        "tag": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coding",
                                "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource."
                            }
                        }
                    }
                }
            ]
        },
        "Narrative": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "string",
                            "enum": [
                                "generated",
                                "extensions",
                                "additional",
                                "empty"
                            ],
                            "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
                        },
                        "div": {
                            "type": "string",
                            "description": "The actual narrative content, a stripped down version of XHTML."
                        }
                    }
                }
            ],
            "required": [
                "status",
                "div"
            ]
        },
        "Extension": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Source of the definition for the extension code - a logical name or a URL."
                        },
                        "valueBase64Binary": {
                            "type": "string",
                            "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueBoolean": {
                            "type": "boolean",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueCanonical": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueCode": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueDate": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueDateTime": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueDecimal": {
                            "type": "number",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueId": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueInstant": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueInteger": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueMarkdown": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueOid": {
                            "type": "string",
                            "pattern": "urn:oid:[0-2](\\.(0|[1-9][0-9]*))+",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valuePositiveInt": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueString": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueTime": {
                            "type": "string",
                            "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueUnsignedInt": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueUri": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueUrl": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueUuid": {
                            "type": "string",
                            "pattern": "urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueAddress": {
                            "$ref": "#/definitions/Address",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueAge": {
                            "$ref": "#/definitions/Age",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueAnnotation": {
                            "$ref": "#/definitions/Annotation",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueAttachment": {
                            "$ref": "#/definitions/Attachment",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueCodeableConcept": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueCoding": {
                            "$ref": "#/definitions/Coding",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueContactPoint": {
                            "$ref": "#/definitions/ContactPoint",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueCount": {
                            "$ref": "#/definitions/Count",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueDistance": {
                            "$ref": "#/definitions/Distance",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueDuration": {
                            "$ref": "#/definitions/Duration",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueHumanName": {
                            "$ref": "#/definitions/HumanName",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueIdentifier": {
                            "$ref": "#/definitions/Identifier",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueMoney": {
                            "$ref": "#/definitions/Money",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valuePeriod": {
                            "$ref": "#/definitions/Period",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueQuantity": {
                            "$ref": "#/definitions/Quantity",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueRange": {
                            "$ref": "#/definitions/Range",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueRatio": {
                            "$ref": "#/definitions/Ratio",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueSampledData": {
                            "$ref": "#/definitions/SampledData",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueSignature": {
                            "$ref": "#/definitions/Signature",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueTiming": {
                            "$ref": "#/definitions/Timing",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueContactDetail": {
                            "$ref": "#/definitions/ContactDetail",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueRelatedArtifact": {
                            "$ref": "#/definitions/RelatedArtifact",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueUsageContext": {
                            "$ref": "#/definitions/UsageContext",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueMeta": {
                            "$ref": "#/definitions/Meta",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        }
                    }
                }
            ],
            "required": [
                "url"
            ]
        }
    }
}
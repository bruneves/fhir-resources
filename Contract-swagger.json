
{
    "swagger": "2.0",
    "info": {
        "title": "Contract API",
        "description": "A simplified version of the HL7 FHIR API for Contract resources.",
        "version": "4.0.1"
    },
    "basePath": "/fhir-server/api/v4",
    "x-ibm-configuration": {
        "gateway": "datapower-api-gateway",
        "type": "rest",
        "phase": "realized",
        "enforced": true,
        "testable": true,
        "cors": {
            "enabled": true
        },
        "assembly": {
            "execute": [
                {
                    "invoke": {
                        "version": "2.0.0",
                        "title": "invoke",
                        "header-control": {
                            "type": "blacklist",
                            "values": [
                            ]
                        },
                        "parameter-control": {
                            "type": "whitelist",
                            "values": [
                            ]
                        },
                        "timeout": 60,
                        "verb": "keep",
                        "cache-response": "protocol",
                        "cache-ttl": 900,
                        "stop-on-error": [
                        ],
                        "target-url": "$(target-url)$(api.operation.path)$(request.search)"
                    }
                }
            ],
            "catch": [
            ]
        },
        "properties": {
            "target-url": {
                "value": "https://localhost/fhir-server/api/v4/",
                "description": "The URL of the target service",
                "encoded": false
            }
        },
        "activity-log": {
            "enabled": true,
            "error-content": "header",
            "success-content": "activity"
        },
        "application-authentication": {
            "certificate": false
        },
        "catalogs": {
        }
    },
    "tags": [
        {
            "name": "Contract"
        }
    ],
    "paths": {
        "/Contract": {
            "post": {
                "tags": [
                    "Contract"
                ],
                "summary": "Create a Contract resource",
                "operationId": "createContract",
                "consumes": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Contract operation successful"
                    }
                }
            },
            "get": {
                "tags": [
                    "Contract"
                ],
                "summary": "Search for Contract resources",
                "operationId": "searchContract",
                "produces": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "name": "authority",
                        "description": "The authority of the contract",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "domain",
                        "description": "The domain of the contract",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "identifier",
                        "description": "The identity of the contract",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "instantiates",
                        "description": "A source definition of the contract",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "issued",
                        "description": "The date/time the contract was issued",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "patient",
                        "description": "The identity of the subject of the contract (if a patient)",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "signer",
                        "description": "Contract Signatory Party",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "status",
                        "description": "The status of the contract",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "subject",
                        "description": "The identity of the subject of the contract",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "url",
                        "description": "The basal contract definition",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "$ref": "#/parameters/_idParam"
                    },
                    {
                        "$ref": "#/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/parameters/_tagParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Contract operation successful",
                        "schema": {
                            "$ref": "#/definitions/Bundle"
                        }
                    }
                }
            }
        },
        "/Contract/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Contract"
                ],
                "summary": "Read specific version of a Contract resource",
                "operationId": "vreadContract",
                "produces": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/idParam"
                    },
                    {
                        "$ref": "#/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Contract operation successful",
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                }
            }
        },
        "/Contract/{id}": {
            "get": {
                "tags": [
                    "Contract"
                ],
                "summary": "Read a Contract resource",
                "operationId": "readContract",
                "produces": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Contract operation successful",
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Contract"
                ],
                "summary": "Update an existing Contract resource",
                "operationId": "updateContract",
                "consumes": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/idParam"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Contract operation successful"
                    },
                    "201": {
                        "description": "Create Contract operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Contract"
                ],
                "summary": "Delete a Contract resource",
                "operationId": "deleteContract",
                "parameters": [
                    {
                        "$ref": "#/parameters/idParam"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete Contract operation successful"
                    }
                }
            }
        },
        "/Contract/{id}/_history": {
            "get": {
                "tags": [
                    "Contract"
                ],
                "summary": "Return the history of a Contract resource",
                "operationId": "historyContract",
                "produces": [
                    "application/fhir+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Contract operation successful",
                        "schema": {
                            "$ref": "#/definitions/Bundle"
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "idParam": {
            "name": "id",
            "description": "logical identifier",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "vidParam": {
            "name": "vid",
            "description": "version identifier",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "_idParam": {
            "name": "_id",
            "description": "Logical id of this artifact",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "_lastUpdatedParam": {
            "name": "_lastUpdated",
            "description": "When the resource version last changed",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "_profileParam": {
            "name": "_profile",
            "description": "Profiles this resource claims to conform to",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "_securityParam": {
            "name": "_security",
            "description": "Security Labels applied to this resource",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "_sourceParam": {
            "name": "_source",
            "description": "Identifies where the resource comes from",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "_tagParam": {
            "name": "_tag",
            "description": "Tags applied to this resource",
            "in": "query",
            "required": false,
            "type": "string"
        }
    },
    "definitions": {
        "Resource": {
            "type": "object",
            "discriminator": "resourceType",
            "properties": {
                "resourceType": {
                    "type": "string",
                    "enum": [
                        "Account",
                        "ActivityDefinition",
                        "AdverseEvent",
                        "AllergyIntolerance",
                        "Appointment",
                        "AppointmentResponse",
                        "AuditEvent",
                        "Basic",
                        "Binary",
                        "BiologicallyDerivedProduct",
                        "BodyStructure",
                        "Bundle",
                        "CapabilityStatement",
                        "CarePlan",
                        "CareTeam",
                        "CatalogEntry",
                        "ChargeItem",
                        "ChargeItemDefinition",
                        "Claim",
                        "ClaimResponse",
                        "ClinicalImpression",
                        "CodeSystem",
                        "Communication",
                        "CommunicationRequest",
                        "CompartmentDefinition",
                        "Composition",
                        "ConceptMap",
                        "Condition",
                        "Consent",
                        "Contract",
                        "Coverage",
                        "CoverageEligibilityRequest",
                        "CoverageEligibilityResponse",
                        "DetectedIssue",
                        "Device",
                        "DeviceDefinition",
                        "DeviceMetric",
                        "DeviceRequest",
                        "DeviceUseStatement",
                        "DiagnosticReport",
                        "DocumentManifest",
                        "DocumentReference",
                        "DomainResource",
                        "EffectEvidenceSynthesis",
                        "Encounter",
                        "Endpoint",
                        "EnrollmentRequest",
                        "EnrollmentResponse",
                        "EpisodeOfCare",
                        "EventDefinition",
                        "Evidence",
                        "EvidenceVariable",
                        "ExampleScenario",
                        "ExplanationOfBenefit",
                        "FamilyMemberHistory",
                        "Flag",
                        "Goal",
                        "GraphDefinition",
                        "Group",
                        "GuidanceResponse",
                        "HealthcareService",
                        "ImagingStudy",
                        "Immunization",
                        "ImmunizationEvaluation",
                        "ImmunizationRecommendation",
                        "ImplementationGuide",
                        "InsurancePlan",
                        "Invoice",
                        "Library",
                        "Linkage",
                        "List",
                        "Location",
                        "Measure",
                        "MeasureReport",
                        "Media",
                        "Medication",
                        "MedicationAdministration",
                        "MedicationDispense",
                        "MedicationKnowledge",
                        "MedicationRequest",
                        "MedicationStatement",
                        "MedicinalProduct",
                        "MedicinalProductAuthorization",
                        "MedicinalProductContraindication",
                        "MedicinalProductIndication",
                        "MedicinalProductIngredient",
                        "MedicinalProductInteraction",
                        "MedicinalProductManufactured",
                        "MedicinalProductPackaged",
                        "MedicinalProductPharmaceutical",
                        "MedicinalProductUndesirableEffect",
                        "MessageDefinition",
                        "MessageHeader",
                        "MolecularSequence",
                        "NamingSystem",
                        "NutritionOrder",
                        "Observation",
                        "ObservationDefinition",
                        "OperationDefinition",
                        "OperationOutcome",
                        "Organization",
                        "OrganizationAffiliation",
                        "Parameters",
                        "Patient",
                        "PaymentNotice",
                        "PaymentReconciliation",
                        "Person",
                        "PlanDefinition",
                        "Practitioner",
                        "PractitionerRole",
                        "Procedure",
                        "Provenance",
                        "Questionnaire",
                        "QuestionnaireResponse",
                        "RelatedPerson",
                        "RequestGroup",
                        "ResearchDefinition",
                        "ResearchElementDefinition",
                        "ResearchStudy",
                        "ResearchSubject",
                        "Resource",
                        "RiskAssessment",
                        "RiskEvidenceSynthesis",
                        "Schedule",
                        "SearchParameter",
                        "ServiceRequest",
                        "Slot",
                        "Specimen",
                        "SpecimenDefinition",
                        "StructureDefinition",
                        "StructureMap",
                        "Subscription",
                        "Substance",
                        "SubstanceNucleicAcid",
                        "SubstancePolymer",
                        "SubstanceProtein",
                        "SubstanceReferenceInformation",
                        "SubstanceSourceMaterial",
                        "SubstanceSpecification",
                        "SupplyDelivery",
                        "SupplyRequest",
                        "Task",
                        "TerminologyCapabilities",
                        "TestReport",
                        "TestScript",
                        "ValueSet",
                        "VerificationResult",
                        "VisionPrescription"
                    ]
                },
                "id": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                    "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
                },
                "implicitRules": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
                },
                "language": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "The base language in which the resource is written."
                }
            },
            "required": [
                "resourceType"
            ]
        },
        "DomainResource": {
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                },
                {
                    "type": "object",
                    "properties": {
                        "text": {
                            "$ref": "#/definitions/Narrative",
                            "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety."
                        },
                        "contained": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Resource",
                                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
                            }
                        },
                        "extension": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extension",
                                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
                            }
                        },
                        "modifierExtension": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extension",
                                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
                            }
                        }
                    }
                }
            ]
        },
        "Contract": {
            "allOf": [
                {
                    "$ref": "#/definitions/DomainResource"
                },
                {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Identifier",
                                "description": "Unique identifier for this Contract or a derivative that references a Source Contract."
                            }
                        },
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Canonical identifier for this contract, represented as a URI (globally unique)."
                        },
                        "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "An edition identifier used for business purposes to label business significant variants."
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "amended",
                                "appended",
                                "cancelled",
                                "disputed",
                                "entered-in-error",
                                "executable",
                                "executed",
                                "negotiable",
                                "offered",
                                "policy",
                                "rejected",
                                "renewed",
                                "revoked",
                                "resolved",
                                "terminated"
                            ],
                            "description": "The status of the resource instance."
                        },
                        "legalState": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Legal states of the formation of a legal instrument, which is a formally executed written document that can be formally attributed to its author, records and formally expresses a legally enforceable act, process, or contractual duty, obligation, or right, and therefore evidences that act, process, or agreement."
                        },
                        "instantiatesCanonical": {
                            "$ref": "#/definitions/Reference",
                            "description": "The URL pointing to a FHIR-defined Contract Definition that is adhered to in whole or part by this Contract."
                        },
                        "instantiatesUri": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The URL pointing to an externally maintained definition that is adhered to in whole or in part by this Contract."
                        },
                        "contentDerivative": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "The minimal content derived from the basal information source at a specific stage in its lifecycle."
                        },
                        "issued": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "When this  Contract was issued."
                        },
                        "applies": {
                            "$ref": "#/definitions/Period",
                            "description": "Relevant time or time-period when this Contract is applicable."
                        },
                        "expirationType": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Event resulting in discontinuation or termination of this Contract instance by one or more parties to the contract."
                        },
                        "subject": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "The target entity impacted by or of interest to parties to the agreement."
                            }
                        },
                        "authority": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "A formally or informally recognized grouping of people, principals, organizations, or jurisdictions formed for the purpose of achieving some form of collective action such as the promulgation, administration and enforcement of contracts and policies."
                            }
                        },
                        "domain": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Recognized governance framework or system operating with a circumscribed scope in accordance with specified principles, policies, processes or procedures for managing rights, actions, or behaviors of parties or principals relative to resources."
                            }
                        },
                        "site": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Sites in which the contract is complied with,  exercised, or in force."
                            }
                        },
                        "name": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A natural language name identifying this Contract definition, derivative, or instance in any legal state. Provides additional information about its content. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                        },
                        "title": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A short, descriptive, user-friendly title for this Contract definition, derivative, or instance in any legal state.t giving additional information about its content."
                        },
                        "subtitle": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "An explanatory or alternate user-friendly title for this Contract definition, derivative, or instance in any legal state.t giving additional information about its content."
                        },
                        "alias": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Alternative representation of the title for this Contract definition, derivative, or instance in any legal state., e.g., a domain specific contract number related to legislation."
                            }
                        },
                        "author": {
                            "$ref": "#/definitions/Reference",
                            "description": "The individual or organization that authored the Contract definition, derivative, or instance in any legal state."
                        },
                        "scope": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A selector of legal concerns for this Contract definition, derivative, or instance in any legal state."
                        },
                        "topicCodeableConcept": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Narrows the range of legal concerns to focus on the achievement of specific contractual objectives."
                        },
                        "topicReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Narrows the range of legal concerns to focus on the achievement of specific contractual objectives."
                        },
                        "type": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A high-level category for the legal instrument, whether constructed as a Contract definition, derivative, or instance in any legal state.  Provides additional information about its content within the context of the Contract's scope to distinguish the kinds of systems that would be interested in the contract."
                        },
                        "subType": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "Sub-category for the Contract that distinguishes the kinds of systems that would be interested in the Contract within the context of the Contract's scope."
                            }
                        },
                        "contentDefinition": {
                            "$ref": "#/definitions/Contract_ContentDefinition",
                            "description": "Precusory content developed with a focus and intent of supporting the formation a Contract instance, which may be associated with and transformable into a Contract."
                        },
                        "term": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term",
                                "description": "One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups."
                            }
                        },
                        "supportingInfo": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Information that may be needed by/relevant to the performer in their execution of this term action."
                            }
                        },
                        "relevantHistory": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Links to Provenance records for past versions of this Contract definition, derivative, or instance, which identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the Contract.  The Provence.entity indicates the target that was changed in the update. http://build.fhir.org/provenance-definitions.html#Provenance.entity."
                            }
                        },
                        "signer": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Signer",
                                "description": "Parties with legal standing in the Contract, including the principal parties, the grantor(s) and grantee(s), which are any person or organization bound by the contract, and any ancillary parties, which facilitate the execution of the contract such as a notary or witness."
                            }
                        },
                        "friendly": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Friendly",
                                "description": "The \"patient friendly language\" versionof the Contract in whole or in parts. \"Patient friendly language\" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement."
                            }
                        },
                        "legal": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Legal",
                                "description": "List of Legal expressions or representations of this Contract."
                            }
                        },
                        "rule": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Rule",
                                "description": "List of Computable Policy Rule Language Representations of this Contract."
                            }
                        },
                        "legallyBindingAttachment": {
                            "$ref": "#/definitions/Attachment",
                            "description": "Legally binding Contract: This is the signed and legally recognized representation of the Contract, which is considered the \"source of truth\" and which would be the basis for legal action related to enforcement of this Contract."
                        },
                        "legallyBindingReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Legally binding Contract: This is the signed and legally recognized representation of the Contract, which is considered the \"source of truth\" and which would be the basis for legal action related to enforcement of this Contract."
                        }
                    }
                }
            ],
            "example": {
                "resourceType": "Contract",
                "meta": {
                    "versionId": "RRri1eUwmP",
                    "lastUpdated": "2020-03-12T00:11:49.907-04:00",
                    "source": "uwm9vMnPft",
                    "profile": [
                        "AakKD7dZF_"
                    ],
                    "security": [
                        {
                            "system": "VtHGijdA2u",
                            "version": "kH9x8c5jUK",
                            "code": "Icgfl9ozZm",
                            "display": "BSi25tURdB",
                            "userSelected": true
                        }
                    ],
                    "tag": [
                        {
                            "system": "i2mwLDpBFt",
                            "version": "fAwwh64lmx",
                            "code": "yeSezs8sZj",
                            "display": "RaL8OE_1HS",
                            "userSelected": true
                        },
                        {
                            "code": "ibm/complete-mock"
                        }
                    ]
                },
                "implicitRules": "sAymSrTdxm",
                "language": "qBVLR6nJsX",
                "text": {
                    "status": "extensions",
                    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"></div>"
                },
                "identifier": [
                    {
                        "use": "temp",
                        "type": {
                            "coding": [
                                {
                                    "system": "zkHa7VQIKS",
                                    "version": "_NRNMiX8u7",
                                    "code": "oWmMc_YVGI",
                                    "display": "cqgVCjLY83",
                                    "userSelected": true
                                }
                            ],
                            "text": "jcqB95orDZ"
                        },
                        "system": "fyj6dPin_5",
                        "value": "snsUBRzfK1",
                        "period": {
                            "start": "2020-03-12T00:11:49.991-04:00",
                            "end": "2020-03-12T00:11:49.991-04:00"
                        }
                    }
                ],
                "url": "Owh5Psi0Nw",
                "version": "daJTmXRhqa",
                "status": "entered-in-error",
                "legalState": {
                    "coding": [
                        {
                            "system": "3UhX0I5PzM",
                            "version": "yYUELrXnvX",
                            "code": "wz72r0O2Rw",
                            "display": "B1qAACu1bT",
                            "userSelected": true
                        }
                    ],
                    "text": "yyupa4GSh_"
                },
                "instantiatesCanonical": {
                    "reference": "Contract/qORq7n_Bmb",
                    "type": "Contract",
                    "identifier": {
                        "use": "official",
                        "type": {
                            "coding": [
                                {
                                    "system": "9Ztwt2Jnde",
                                    "version": "_oLyIk2lqG",
                                    "code": "_98d__MJbD",
                                    "display": "R42zwJkN0A",
                                    "userSelected": true
                                }
                            ],
                            "text": "PMWRQY4uV9"
                        },
                        "system": "AF4TEZAX_O",
                        "value": "AdEbE4D9SE",
                        "period": {
                            "start": "2020-03-12T00:11:49.992-04:00",
                            "end": "2020-03-12T00:11:49.992-04:00"
                        }
                    },
                    "display": "WALzeYmIHE"
                },
                "instantiatesUri": "vylVpgHO21",
                "contentDerivative": {
                    "coding": [
                        {
                            "system": "vNq26r14Aq",
                            "version": "ElPdWKGKAX",
                            "code": "FVG_K5TGJG",
                            "display": "esOOjnaZb5",
                            "userSelected": true
                        }
                    ],
                    "text": "XfJBzEW0nT"
                },
                "issued": "2020-03-12T00:11:49.92-04:00",
                "applies": {
                    "start": "2020-03-12T00:11:49.921-04:00",
                    "end": "2020-03-12T00:11:49.922-04:00"
                },
                "expirationType": {
                    "coding": [
                        {
                            "system": "zxEH01RgMw",
                            "version": "go7Fzm5BNi",
                            "code": "wCuhp1m3pm",
                            "display": "ny04sNCHR3",
                            "userSelected": true
                        }
                    ],
                    "text": "Dd5Rz3Kyd9"
                },
                "subject": [
                    {
                        "reference": "icFjJckFOh",
                        "type": "4hbEZ_haX0",
                        "identifier": {
                            "use": "official",
                            "type": {
                                "coding": [
                                    {
                                        "system": "GL0hA4Q3Or",
                                        "version": "MZuFuBiUly",
                                        "code": "vYwqZ0MqXs",
                                        "display": "fj_6TRoZmk",
                                        "userSelected": true
                                    }
                                ],
                                "text": "Sm0Fk6cwi2"
                            },
                            "system": "BqiBr8I3J5",
                            "value": "IhHj3ZKmK8",
                            "period": {
                                "start": "2020-03-12T00:11:49.908-04:00",
                                "end": "2020-03-12T00:11:49.908-04:00"
                            }
                        },
                        "display": "INKaDysGxV"
                    }
                ],
                "authority": [
                    {
                        "reference": "sNkBud271x",
                        "type": "tpGh44zIA3",
                        "identifier": {
                            "use": "usual",
                            "type": {
                                "coding": [
                                    {
                                        "system": "65ZSTrZF_0",
                                        "version": "6RHu8Iomfp",
                                        "code": "e46BsDRYVy",
                                        "display": "LmzOrWZ025",
                                        "userSelected": true
                                    }
                                ],
                                "text": "WxzwDasF4e"
                            },
                            "system": "So4wcevph8",
                            "value": "uQ5ssw9c6w",
                            "period": {
                                "start": "2020-03-12T00:11:49.904-04:00",
                                "end": "2020-03-12T00:11:49.904-04:00"
                            }
                        },
                        "display": "oE31ZBzKNA"
                    }
                ],
                "domain": [
                    {
                        "reference": "XMd9cMNsMJ",
                        "type": "t7aFvjDB9D",
                        "identifier": {
                            "use": "secondary",
                            "type": {
                                "coding": [
                                    {
                                        "system": "iCcRKuwXdU",
                                        "version": "IKIhZCAzDy",
                                        "code": "drtn3M7FLs",
                                        "display": "t2gcZcYupP",
                                        "userSelected": true
                                    }
                                ],
                                "text": "8ScM4yUFlI"
                            },
                            "system": "5de_tF1bUn",
                            "value": "Ipz0BvmgCM",
                            "period": {
                                "start": "2020-03-12T00:11:49.899-04:00",
                                "end": "2020-03-12T00:11:49.899-04:00"
                            }
                        },
                        "display": "22FRr8oD1m"
                    }
                ],
                "site": [
                    {
                        "reference": "iGtVeB7973",
                        "type": "w3YsjZyC2e",
                        "identifier": {
                            "use": "usual",
                            "type": {
                                "coding": [
                                    {
                                        "system": "nLVS8AaMbU",
                                        "version": "umoQgMFwjg",
                                        "code": "IZNsbC16m_",
                                        "display": "gh0iAL_Mea",
                                        "userSelected": true
                                    }
                                ],
                                "text": "H_TLHxgpQD"
                            },
                            "system": "3hgtfaxTnN",
                            "value": "QN5VRWxBuJ",
                            "period": {
                                "start": "2020-03-12T00:11:49.918-04:00",
                                "end": "2020-03-12T00:11:49.919-04:00"
                            }
                        },
                        "display": "PmKRiUuJmL"
                    }
                ],
                "name": "VoKhZmyljm",
                "title": "WGjhmkzES2",
                "subtitle": "O3Gj0SP4ez",
                "alias": [
                    "lurCcDb7Tj"
                ],
                "author": {
                    "reference": "Patient/h49Qra3FER",
                    "type": "Patient",
                    "identifier": {
                        "use": "usual",
                        "type": {
                            "coding": [
                                {
                                    "system": "YecQmBSHlc",
                                    "version": "HPjratJ6BH",
                                    "code": "2K6WpzHVIE",
                                    "display": "elpDnvRgWb",
                                    "userSelected": true
                                }
                            ],
                            "text": "_VCh5A0zlq"
                        },
                        "system": "IjIFFR8Ky8",
                        "value": "jpqtPi5klR",
                        "period": {
                            "start": "2020-03-12T00:11:49.916-04:00",
                            "end": "2020-03-12T00:11:49.916-04:00"
                        }
                    },
                    "display": "bFPpbDR_Es"
                },
                "scope": {
                    "coding": [
                        {
                            "system": "l9kCS8zZKI",
                            "version": "iaKJ8rXUcd",
                            "code": "mJzc3oQIz3",
                            "display": "WEsrwC52QX",
                            "userSelected": true
                        }
                    ],
                    "text": "Lz3Pu3svlO"
                },
                "topicCodeableConcept": {
                    "coding": [
                        {
                            "system": "rXFmTLoQt5",
                            "version": "6qyUsphheU",
                            "code": "ZrrxvkPr_W",
                            "display": "7j6ayXlAkQ",
                            "userSelected": true
                        }
                    ],
                    "text": "5N_uxbnuN3"
                },
                "type": {
                    "coding": [
                        {
                            "system": "mTUBaDv_Wb",
                            "version": "9vl7WUnzYy",
                            "code": "QQnH20eAtO",
                            "display": "Xsv5Sxh3SM",
                            "userSelected": true
                        }
                    ],
                    "text": "uIFI3NrcEA"
                },
                "subType": [
                    {
                        "coding": [
                            {
                                "system": "zwh6iLCQBZ",
                                "version": "mxkhPZG3e8",
                                "code": "eLhTTxhagO",
                                "display": "59JGyn3Yvu",
                                "userSelected": true
                            }
                        ],
                        "text": "_GCkEnfi6j"
                    }
                ],
                "contentDefinition": {
                    "type": {
                        "coding": [
                            {
                                "system": "SzulkGY5Ju",
                                "version": "QYS8SeSxwL",
                                "code": "xsXqseRbfU",
                                "display": "h9jUyobYTv",
                                "userSelected": true
                            }
                        ],
                        "text": "z1HQWWMsN2"
                    },
                    "subType": {
                        "coding": [
                            {
                                "system": "CH1F9Bxj9i",
                                "version": "hDbzPB_2pM",
                                "code": "8dlkstJH8m",
                                "display": "DlwacwbC76",
                                "userSelected": true
                            }
                        ],
                        "text": "bQqAPIV3ur"
                    },
                    "publisher": {
                        "reference": "Practitioner/pGfpQ4truQ",
                        "type": "Practitioner",
                        "identifier": {
                            "use": "old",
                            "type": {
                                "coding": [
                                    {
                                        "system": "qatnV0FF2E",
                                        "version": "T4DfGu9P0Q",
                                        "code": "SFmWoPfTeK",
                                        "display": "wqPB5lykGG",
                                        "userSelected": true
                                    }
                                ],
                                "text": "aKnsPPqgTE"
                            },
                            "system": "wdKgHsaZN5",
                            "value": "q4prDz0rAE",
                            "period": {
                                "start": "2020-03-12T00:11:49.925-04:00",
                                "end": "2020-03-12T00:11:49.926-04:00"
                            }
                        },
                        "display": "JOAMCYmhTw"
                    },
                    "publicationDate": "2020-03-12T00:11:49.926-04:00",
                    "publicationStatus": "executable",
                    "copyright": "dAT9wl969n"
                },
                "term": [
                    {
                        "identifier": {
                            "use": "old",
                            "type": {
                                "coding": [
                                    {
                                        "system": "qVmyug7f8m",
                                        "version": "aAM_RlOgBM",
                                        "code": "vnRe4dbk8r",
                                        "display": "PBpMpkFf1G",
                                        "userSelected": true
                                    }
                                ],
                                "text": "RPi6TPcRGw"
                            },
                            "system": "uP15TMIw9k",
                            "value": "7j6qKUK4H3",
                            "period": {
                                "start": "2020-03-12T00:11:49.949-04:00",
                                "end": "2020-03-12T00:11:49.95-04:00"
                            }
                        },
                        "issued": "2020-03-12T00:11:49.93-04:00",
                        "applies": {
                            "start": "2020-03-12T00:11:49.93-04:00",
                            "end": "2020-03-12T00:11:49.93-04:00"
                        },
                        "topicCodeableConcept": {
                            "coding": [
                                {
                                    "system": "U96Q3trzlv",
                                    "version": "_xM769YCO3",
                                    "code": "M0j1B8YdHC",
                                    "display": "haFH7XtQH4",
                                    "userSelected": true
                                }
                            ],
                            "text": "pCt3vtpQW5"
                        },
                        "type": {
                            "coding": [
                                {
                                    "system": "KmB0RsMjXP",
                                    "version": "4WDhC30fDr",
                                    "code": "kU64qNfmJk",
                                    "display": "HVDXhCkvBX",
                                    "userSelected": true
                                }
                            ],
                            "text": "7uOGOWkN3s"
                        },
                        "subType": {
                            "coding": [
                                {
                                    "system": "DBBTlF2dfI",
                                    "version": "ad0rA1KFcZ",
                                    "code": "5Xz65a_xww",
                                    "display": "ZxxXAGBXdd",
                                    "userSelected": true
                                }
                            ],
                            "text": "guKlKTak33"
                        },
                        "text": "OoUJJNz8H1",
                        "securityLabel": [
                            {
                                "number": [
                                    2090826913
                                ],
                                "classification": {
                                    "system": "bkonOqjJt6",
                                    "version": "Kjqf8YkTn9",
                                    "code": "0VvPz6xJGB",
                                    "display": "Lp_N4TzIV7",
                                    "userSelected": true
                                },
                                "category": [
                                    {
                                        "system": "7RPK1J5Tm6",
                                        "version": "OC5JsQ7ZPu",
                                        "code": "028ilUriKw",
                                        "display": "Z5W1kxLmQx",
                                        "userSelected": true
                                    }
                                ],
                                "control": [
                                    {
                                        "system": "ppZ88ShVgS",
                                        "version": "fBQbBC0OyE",
                                        "code": "CO7YbMEOle",
                                        "display": "MoQHo2XULR",
                                        "userSelected": true
                                    }
                                ]
                            }
                        ],
                        "offer": {
                            "identifier": [
                                {
                                    "use": "temp",
                                    "type": {
                                        "coding": [
                                            {
                                                "system": "1PJPGaRJIH",
                                                "version": "ukylbkzMqx",
                                                "code": "usE7PCu0UU",
                                                "display": "yL7VRBm443",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "aS3gJEtziW"
                                    },
                                    "system": "QYbs9CkcVm",
                                    "value": "4xPPxLY3QX",
                                    "period": {
                                        "start": "2020-03-12T00:11:49.976-04:00",
                                        "end": "2020-03-12T00:11:49.976-04:00"
                                    }
                                }
                            ],
                            "party": [
                                {
                                    "reference": [
                                        {
                                            "reference": "JCIBdHe1M0",
                                            "type": "jt4jT9VT34",
                                            "identifier": {
                                                "use": "old",
                                                "type": {
                                                    "coding": [
                                                        {
                                                            "system": "dQvGvGbgFt",
                                                            "version": "iENRQLtLUb",
                                                            "code": "2Y0hfmCI85",
                                                            "display": "5Brhlygysu",
                                                            "userSelected": true
                                                        }
                                                    ],
                                                    "text": "Sdb3PJlUMl"
                                                },
                                                "system": "y4DNO9BzID",
                                                "value": "9rGIiGjI5V",
                                                "period": {
                                                    "start": "2020-03-12T00:11:49.971-04:00",
                                                    "end": "2020-03-12T00:11:49.971-04:00"
                                                }
                                            },
                                            "display": "_twHrASdBz"
                                        }
                                    ],
                                    "role": {
                                        "coding": [
                                            {
                                                "system": "OsdUnL3Srm",
                                                "version": "uIKs3f3hgj",
                                                "code": "ptJZlKPw56",
                                                "display": "Hv6in4aN_i",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "hEPO_D18Ph"
                                    }
                                }
                            ],
                            "topic": {
                                "reference": "DNYxp67fJo",
                                "type": "osdcScdPrJ",
                                "identifier": {
                                    "use": "secondary",
                                    "type": {
                                        "coding": [
                                            {
                                                "system": "GQE4mRIsU3",
                                                "version": "GZsl6hjZiQ",
                                                "code": "HwFqu995Pf",
                                                "display": "QylI2pN58X",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "uvIlIGXqYi"
                                    },
                                    "system": "kfVy0OQTo5",
                                    "value": "u8T_fVHMnC",
                                    "period": {
                                        "start": "2020-03-12T00:11:49.973-04:00",
                                        "end": "2020-03-12T00:11:49.974-04:00"
                                    }
                                },
                                "display": "0nzeEmJ8we"
                            },
                            "type": {
                                "coding": [
                                    {
                                        "system": "zjiHeupjP8",
                                        "version": "Yg6zeCAQ8V",
                                        "code": "a9cXqqE03R",
                                        "display": "5Py65vZJpG",
                                        "userSelected": true
                                    }
                                ],
                                "text": "if3XH9JmjM"
                            },
                            "decision": {
                                "coding": [
                                    {
                                        "system": "fM4jqlXohH",
                                        "version": "H8SMp0EgCs",
                                        "code": "D6u8SJwtyS",
                                        "display": "QmEX16ISGy",
                                        "userSelected": true
                                    }
                                ],
                                "text": "DNeNig5hF6"
                            },
                            "decisionMode": [
                                {
                                    "coding": [
                                        {
                                            "system": "v7BkEQ4EfP",
                                            "version": "MjyEOvkPie",
                                            "code": "P3N1aGf7Tg",
                                            "display": "EWfuGOPkhF",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "vcFp0fcrjI"
                                }
                            ],
                            "answer": [
                                {
                                    "valueBoolean": true
                                }
                            ],
                            "text": "HosLpgUUep",
                            "linkId": [
                                "iHL3koiCjV"
                            ],
                            "securityLabelNumber": [
                                1076923438
                            ]
                        },
                        "asset": [
                            {
                                "scope": {
                                    "coding": [
                                        {
                                            "system": "az1vMO077p",
                                            "version": "nwggOZSeOi",
                                            "code": "5zomGDxked",
                                            "display": "6hUSssbjBb",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "9IIKf2S8Ia"
                                },
                                "type": [
                                    {
                                        "coding": [
                                            {
                                                "system": "f8KwouvXGn",
                                                "version": "Ugm0SHwfxD",
                                                "code": "aKv5Z_lZD1",
                                                "display": "Jprm6i5tsN",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "crWXuoJyGj"
                                    }
                                ],
                                "typeReference": [
                                    {
                                        "reference": "NO4htf5ipo",
                                        "type": "pGzpG9_yAX",
                                        "identifier": {
                                            "use": "official",
                                            "type": {
                                                "coding": [
                                                    {
                                                        "system": "NfaOsZcu7S",
                                                        "version": "qLbACTbJIt",
                                                        "code": "GhzDyEdUcm",
                                                        "display": "0cU6ygxEjb",
                                                        "userSelected": true
                                                    }
                                                ],
                                                "text": "EgeK54v6Sm"
                                            },
                                            "system": "w_4pAwUKhy",
                                            "value": "cjOwTEki_Z",
                                            "period": {
                                                "start": "2020-03-12T00:11:49.937-04:00",
                                                "end": "2020-03-12T00:11:49.937-04:00"
                                            }
                                        },
                                        "display": "TtGCQt0PWY"
                                    }
                                ],
                                "subtype": [
                                    {
                                        "coding": [
                                            {
                                                "system": "YoBmHlfBF2",
                                                "version": "lVJWXpEIn6",
                                                "code": "zV8puGyt3n",
                                                "display": "R6SrZavav5",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "JTdmNfFUgl"
                                    }
                                ],
                                "relationship": {
                                    "system": "caS2sbByPn",
                                    "version": "7s4kvLs9af",
                                    "code": "B_syiBd68B",
                                    "display": "iBjSGKUxvr",
                                    "userSelected": true
                                },
                                "context": [
                                    {
                                        "reference": {
                                            "reference": "5uStJpZG0_",
                                            "type": "yv1RJ_8Rfh",
                                            "identifier": {
                                                "use": "official",
                                                "type": {
                                                    "coding": [
                                                        {
                                                            "system": "G_CTHiaVhz",
                                                            "version": "uItnOwpltw",
                                                            "code": "pz_S5w_dQX",
                                                            "display": "x9fKcio5zO",
                                                            "userSelected": true
                                                        }
                                                    ],
                                                    "text": "NCAY4zH2ZU"
                                                },
                                                "system": "eLULfHZmUq",
                                                "value": "gRgOZxFSub",
                                                "period": {
                                                    "start": "2020-03-12T00:11:49.934-04:00",
                                                    "end": "2020-03-12T00:11:49.934-04:00"
                                                }
                                            },
                                            "display": "NePwaGVg3g"
                                        },
                                        "code": [
                                            {
                                                "coding": [
                                                    {
                                                        "system": "0OkdPDRGgD",
                                                        "version": "HMzTN6nQAL",
                                                        "code": "N7GdYranw1",
                                                        "display": "MCwSpgv8qE",
                                                        "userSelected": true
                                                    }
                                                ],
                                                "text": "2C_7HPhJEa"
                                            }
                                        ],
                                        "text": "aY6mMW_nCq"
                                    }
                                ],
                                "condition": "3g2mVre9dZ",
                                "periodType": [
                                    {
                                        "coding": [
                                            {
                                                "system": "HxqaJbpBhp",
                                                "version": "yfgaCnq4Yj",
                                                "code": "WvtnLyTMCq",
                                                "display": "XOOCG628B2",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "NabI43UzLa"
                                    }
                                ],
                                "period": [
                                    {
                                        "start": "2020-03-12T00:11:49.947-04:00",
                                        "end": "2020-03-12T00:11:49.947-04:00"
                                    }
                                ],
                                "usePeriod": [
                                    {
                                        "start": "2020-03-12T00:11:49.938-04:00",
                                        "end": "2020-03-12T00:11:49.938-04:00"
                                    }
                                ],
                                "text": "muQwuLgvjM",
                                "linkId": [
                                    "4UZIfeKqfm"
                                ],
                                "answer": [
                                    {
                                        "valueBoolean": true
                                    }
                                ],
                                "securityLabelNumber": [
                                    698524160
                                ],
                                "valuedItem": [
                                    {
                                        "entityCodeableConcept": {
                                            "coding": [
                                                {
                                                    "system": "FCyGP5LNk2",
                                                    "version": "zRti97ox2z",
                                                    "code": "x5uH9kE8vm",
                                                    "display": "fjioNELQsV",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "kewBCAz6JJ"
                                        },
                                        "identifier": {
                                            "use": "temp",
                                            "type": {
                                                "coding": [
                                                    {
                                                        "system": "XMT_WOVynY",
                                                        "version": "eatYxXysVV",
                                                        "code": "uEJL8euofm",
                                                        "display": "8QqH6d8IoQ",
                                                        "userSelected": true
                                                    }
                                                ],
                                                "text": "_ZHUstBSY5"
                                            },
                                            "system": "NzMH4fleor",
                                            "value": "o9Uj2xaSEs",
                                            "period": {
                                                "start": "2020-03-12T00:11:49.944-04:00",
                                                "end": "2020-03-12T00:11:49.944-04:00"
                                            }
                                        },
                                        "effectiveTime": "2020-03-12T00:11:49.943-04:00",
                                        "quantity": {
                                            "value": 118047782178,
                                            "unit": "8F3yewnPuj",
                                            "system": "LxRJ4I66xc",
                                            "code": "SlgvEyHEGl"
                                        },
                                        "unitPrice": {
                                            "value": 216007145221,
                                            "currency": "yWTCsTCW6X"
                                        },
                                        "factor": 255382849619,
                                        "points": 469695922286,
                                        "net": {
                                            "value": 405728420215,
                                            "currency": "ulNA0tcEm3"
                                        },
                                        "payment": "Zp00OI7VNL",
                                        "paymentDate": "2020-03-12T00:11:49.943-04:00",
                                        "responsible": {
                                            "reference": "Organization/x0ArrhQvPG",
                                            "type": "Organization",
                                            "identifier": {
                                                "use": "usual",
                                                "type": {
                                                    "coding": [
                                                        {
                                                            "system": "B9gA7OQq4r",
                                                            "version": "HAPsgs7Q2G",
                                                            "code": "6up2wKeLPr",
                                                            "display": "ygEFWzR0hi",
                                                            "userSelected": true
                                                        }
                                                    ],
                                                    "text": "GJoE6NF4d3"
                                                },
                                                "system": "PdezLIvyJc",
                                                "value": "Arx6I_Q0JP",
                                                "period": {
                                                    "start": "2020-03-12T00:11:49.94-04:00",
                                                    "end": "2020-03-12T00:11:49.94-04:00"
                                                }
                                            },
                                            "display": "xQw1x3vCtP"
                                        },
                                        "recipient": {
                                            "reference": "Organization/Rq4d1V9ZiP",
                                            "type": "Organization",
                                            "identifier": {
                                                "use": "old",
                                                "type": {
                                                    "coding": [
                                                        {
                                                            "system": "PKps_I7oAL",
                                                            "version": "crm3V1wL95",
                                                            "code": "emntLIfr2l",
                                                            "display": "WE9euBWS5s",
                                                            "userSelected": true
                                                        }
                                                    ],
                                                    "text": "OEZhOrNWrk"
                                                },
                                                "system": "qCYwTtP582",
                                                "value": "Wh8ICyNUYo",
                                                "period": {
                                                    "start": "2020-03-12T00:11:49.942-04:00",
                                                    "end": "2020-03-12T00:11:49.942-04:00"
                                                }
                                            },
                                            "display": "q6icoqN9af"
                                        },
                                        "linkId": [
                                            "h7887ws4UI"
                                        ],
                                        "securityLabelNumber": [
                                            1169424804
                                        ]
                                    }
                                ]
                            }
                        ],
                        "action": [
                            {
                                "doNotPerform": true,
                                "type": {
                                    "coding": [
                                        {
                                            "system": "WRgomO9RN0",
                                            "version": "fbyaeepzdr",
                                            "code": "e_bqYkgUE1",
                                            "display": "hsfHowYX4f",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "bINOrsma6s"
                                },
                                "subject": [
                                    {
                                        "reference": [
                                            {
                                                "reference": "v1PSeJ1dSl",
                                                "type": "jP1vtpmZ2M",
                                                "identifier": {
                                                    "use": "old",
                                                    "type": {
                                                        "coding": [
                                                            {
                                                                "system": "eILYQtrMW4",
                                                                "version": "g3tBWtIbwL",
                                                                "code": "Vlao1whcUH",
                                                                "display": "ZoIWrcCZbl",
                                                                "userSelected": true
                                                            }
                                                        ],
                                                        "text": "0R2imptTdg"
                                                    },
                                                    "system": "9VbqsHRY5k",
                                                    "value": "cTEAOjSxQe",
                                                    "period": {
                                                        "start": "2020-03-12T00:11:49.964-04:00",
                                                        "end": "2020-03-12T00:11:49.964-04:00"
                                                    }
                                                },
                                                "display": "KzsDGWGYow"
                                            }
                                        ],
                                        "role": {
                                            "coding": [
                                                {
                                                    "system": "6LZ77AE7xt",
                                                    "version": "rIrRUGBuws",
                                                    "code": "VluqWCdr5q",
                                                    "display": "YCbVu7vf2L",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "UU_OfyGJsn"
                                        }
                                    }
                                ],
                                "intent": {
                                    "coding": [
                                        {
                                            "system": "Xy9KGHmejz",
                                            "version": "7i37BlaRQ9",
                                            "code": "GVwCZwBbWt",
                                            "display": "GB0PrYspJr",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "NVwejseY6P"
                                },
                                "linkId": [
                                    "SDY1TRnF5F"
                                ],
                                "status": {
                                    "coding": [
                                        {
                                            "system": "i0l7kquj_8",
                                            "version": "4nTztMJ5LE",
                                            "code": "RNNBonCprt",
                                            "display": "8gsghS4YIQ",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "gE8A0jBKms"
                                },
                                "context": {
                                    "reference": "Encounter/MiEL929qSo",
                                    "type": "Encounter",
                                    "identifier": {
                                        "use": "secondary",
                                        "type": {
                                            "coding": [
                                                {
                                                    "system": "_LSIliplZi",
                                                    "version": "Xv31PZrIZs",
                                                    "code": "mmSH3Xfhdi",
                                                    "display": "uXl9tWbYwp",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "IYZ6Seux6Y"
                                        },
                                        "system": "GsNADiXE6X",
                                        "value": "3M4tiSk5Xp",
                                        "period": {
                                            "start": "2020-03-12T00:11:49.954-04:00",
                                            "end": "2020-03-12T00:11:49.954-04:00"
                                        }
                                    },
                                    "display": "Tq1Vvks2_V"
                                },
                                "contextLinkId": [
                                    "eewBTGfoEc"
                                ],
                                "occurrenceDateTime": "2020-03-12T00:11:49.96-04:00",
                                "requester": [
                                    {
                                        "reference": "8yNY00wxuT",
                                        "type": "0JLpT_DtCh",
                                        "identifier": {
                                            "use": "old",
                                            "type": {
                                                "coding": [
                                                    {
                                                        "system": "irw8Vmi1ZT",
                                                        "version": "BaK8jtrFH3",
                                                        "code": "Rd763SEQn1",
                                                        "display": "_5OAkBw30t",
                                                        "userSelected": true
                                                    }
                                                ],
                                                "text": "tVYA537CTz"
                                            },
                                            "system": "izJn6WmXe9",
                                            "value": "qYZbqX6Iho",
                                            "period": {
                                                "start": "2020-03-12T00:11:49.961-04:00",
                                                "end": "2020-03-12T00:11:49.961-04:00"
                                            }
                                        },
                                        "display": "nDMA2N4tSR"
                                    }
                                ],
                                "requesterLinkId": [
                                    "3k60y72h9R"
                                ],
                                "performerType": [
                                    {
                                        "coding": [
                                            {
                                                "system": "J3gTS_NgbX",
                                                "version": "kPvotSw9r7",
                                                "code": "E2eswmwiOk",
                                                "display": "ewOD5zM2Lr",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "paHRHEt8cL"
                                    }
                                ],
                                "performerRole": {
                                    "coding": [
                                        {
                                            "system": "GaBp1QBMyV",
                                            "version": "Ze9m03eujv",
                                            "code": "Co7zSy5tiH",
                                            "display": "2SuKAzbPLF",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "JcQt3w64p3"
                                },
                                "performer": {
                                    "reference": "RelatedPerson/e4wlxCWTuX",
                                    "type": "RelatedPerson",
                                    "identifier": {
                                        "use": "secondary",
                                        "type": {
                                            "coding": [
                                                {
                                                    "system": "le6qcvPDJF",
                                                    "version": "Nn2og3x_hY",
                                                    "code": "CAtPzcOBch",
                                                    "display": "HileUFm6xu",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "OZ6JMRWlp7"
                                        },
                                        "system": "NI2iMHaTOP",
                                        "value": "BOf_DmE8G1",
                                        "period": {
                                            "start": "2020-03-12T00:11:49.966-04:00",
                                            "end": "2020-03-12T00:11:49.966-04:00"
                                        }
                                    },
                                    "display": "m9BT5OSL8q"
                                },
                                "performerLinkId": [
                                    "lJvIXnzEy0"
                                ],
                                "reasonCode": [
                                    {
                                        "coding": [
                                            {
                                                "system": "DQ3b6C7qCt",
                                                "version": "lnbeSfi7KK",
                                                "code": "wUwKckzgNu",
                                                "display": "Ene2WD6fP_",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "8OsXIrrn01"
                                    }
                                ],
                                "reasonReference": [
                                    {
                                        "reference": "u5mA7DyvYI",
                                        "type": "uyXLjFOv_4",
                                        "identifier": {
                                            "use": "secondary",
                                            "type": {
                                                "coding": [
                                                    {
                                                        "system": "rqHKdJuKaN",
                                                        "version": "W5oyOGjCik",
                                                        "code": "cn4oHgHB8R",
                                                        "display": "hir9z3GzE3",
                                                        "userSelected": true
                                                    }
                                                ],
                                                "text": "BUA5SXRFL8"
                                            },
                                            "system": "OPWoufFtyV",
                                            "value": "Mv91T50Uwb",
                                            "period": {
                                                "start": "2020-03-12T00:11:49.959-04:00",
                                                "end": "2020-03-12T00:11:49.959-04:00"
                                            }
                                        },
                                        "display": "W5OZRVF3kx"
                                    }
                                ],
                                "reason": [
                                    "iGmVVSe89U"
                                ],
                                "reasonLinkId": [
                                    "RmpKnhI0WH"
                                ],
                                "note": [
                                    {
                                        "authorReference": {
                                            "reference": "3Fli99S8F2",
                                            "type": "3EevFbUmgc",
                                            "identifier": {
                                                "use": "temp",
                                                "type": {
                                                    "coding": [
                                                        {
                                                            "system": "GENtq8pEhs",
                                                            "version": "BrgkCvcNFS",
                                                            "code": "rjLbrX9Eb7",
                                                            "display": "aNAOHInMrV",
                                                            "userSelected": true
                                                        }
                                                    ],
                                                    "text": "f3VS7TrKX8"
                                                },
                                                "system": "syU1nrrLt1",
                                                "value": "dzcbWOwnGR",
                                                "period": {
                                                    "start": "2020-03-12T00:11:49.956-04:00",
                                                    "end": "2020-03-12T00:11:49.956-04:00"
                                                }
                                            },
                                            "display": "cnpyTd69w_"
                                        },
                                        "time": "2020-03-12T00:11:49.957-04:00",
                                        "text": "QlPzDSbrDr"
                                    }
                                ],
                                "securityLabelNumber": [
                                    1888510896
                                ]
                            }
                        ]
                    }
                ],
                "supportingInfo": [
                    {
                        "reference": "Ym9c4BChsY",
                        "type": "tH7pBjvxge",
                        "identifier": {
                            "use": "usual",
                            "type": {
                                "coding": [
                                    {
                                        "system": "H8haJN6nl0",
                                        "version": "_r2TmWfSfk",
                                        "code": "ZigrZqDs81",
                                        "display": "zY36YiBv08",
                                        "userSelected": true
                                    }
                                ],
                                "text": "k5rodpc2r1"
                            },
                            "system": "vLQhys8D8n",
                            "value": "qNcPDjFO9S",
                            "period": {
                                "start": "2020-03-12T00:11:49.994-04:00",
                                "end": "2020-03-12T00:11:49.994-04:00"
                            }
                        },
                        "display": "ngJdnPYj1D"
                    }
                ],
                "relevantHistory": [
                    {
                        "reference": "1sgaXubodp",
                        "type": "CxPMR8zUYH",
                        "identifier": {
                            "use": "old",
                            "type": {
                                "coding": [
                                    {
                                        "system": "NR_zu4Avks",
                                        "version": "QWyY645qPU",
                                        "code": "ILzmIoxedD",
                                        "display": "GkA87GA2B5",
                                        "userSelected": true
                                    }
                                ],
                                "text": "aO17n6_PiO"
                            },
                            "system": "ocDmxmE8SG",
                            "value": "6NaPLuTl9P",
                            "period": {
                                "start": "2020-03-12T00:11:49.978-04:00",
                                "end": "2020-03-12T00:11:49.978-04:00"
                            }
                        },
                        "display": "SP6F6XY64e"
                    }
                ],
                "signer": [
                    {
                        "type": {
                            "system": "Hv4cwTbiqX",
                            "version": "ZFJd4H5oQE",
                            "code": "HfrNoBB95i",
                            "display": "JJ0e1s6Rhg",
                            "userSelected": true
                        },
                        "party": {
                            "reference": "Organization/EDyVdPJc91",
                            "type": "Organization",
                            "identifier": {
                                "use": "secondary",
                                "type": {
                                    "coding": [
                                        {
                                            "system": "aJRmZk_DW9",
                                            "version": "JWSYzPavDu",
                                            "code": "8dA35f0fMT",
                                            "display": "gWpNYAhBZC",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "nThMMuZMoo"
                                },
                                "system": "IY4t2bSRAN",
                                "value": "ndQdUo6sDj",
                                "period": {
                                    "start": "2020-03-12T00:11:49.985-04:00",
                                    "end": "2020-03-12T00:11:49.985-04:00"
                                }
                            },
                            "display": "v5a2WZFwwm"
                        },
                        "signature": [
                            {
                                "type": [
                                    {
                                        "system": "Yi9wZgEl7r",
                                        "version": "6WFQR0434K",
                                        "code": "4NQC2Y6WUl",
                                        "display": "sHO852D1j4",
                                        "userSelected": true
                                    }
                                ],
                                "when": "2020-03-12T00:11:49.982-04:00",
                                "who": {
                                    "reference": "Practitioner/dqBkREvXqi",
                                    "type": "Practitioner",
                                    "identifier": {
                                        "use": "old",
                                        "type": {
                                            "coding": [
                                                {
                                                    "system": "RiZ_6lNxaU",
                                                    "version": "iM1hLpbqjh",
                                                    "code": "CkJo35Gh3I",
                                                    "display": "tTgHTcEZJ5",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "xyS9ugoVB9"
                                        },
                                        "system": "H5JAoYi9Zn",
                                        "value": "YYlk7dfNRs",
                                        "period": {
                                            "start": "2020-03-12T00:11:49.98-04:00",
                                            "end": "2020-03-12T00:11:49.981-04:00"
                                        }
                                    },
                                    "display": "vPwEibHXpn"
                                },
                                "onBehalfOf": {
                                    "reference": "Practitioner/4t6ipnyzIE",
                                    "type": "Practitioner",
                                    "identifier": {
                                        "use": "official",
                                        "type": {
                                            "coding": [
                                                {
                                                    "system": "NXg76OxtuI",
                                                    "version": "6O05ecPJJO",
                                                    "code": "vcD7Xq6rYC",
                                                    "display": "33E_8GWZTM",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "QrYgSR7m2s"
                                        },
                                        "system": "QYCBTnlVar",
                                        "value": "MDlkGPZ9SB",
                                        "period": {
                                            "start": "2020-03-12T00:11:49.982-04:00",
                                            "end": "2020-03-12T00:11:49.982-04:00"
                                        }
                                    },
                                    "display": "grKuykvADw"
                                },
                                "targetFormat": "P8IsH1QGHz",
                                "sigFormat": "XDaIor1skU",
                                "data": "PQUnDkc="
                            }
                        ]
                    }
                ],
                "friendly": [
                    {
                        "contentAttachment": {
                            "contentType": "buUw4dMzvY",
                            "language": "_0uvdwg1bT",
                            "data": "JTglXB4=",
                            "url": "VMNVDRIUyC",
                            "size": 204505042,
                            "hash": "fz1+Pxc=",
                            "title": "PzBK1ezjah",
                            "creation": "2020-03-12T00:11:49.986-04:00"
                        }
                    }
                ],
                "legal": [
                    {
                        "contentAttachment": {
                            "contentType": "SBa7QolnNR",
                            "language": "Fa376id1Av",
                            "data": "EHApNn0=",
                            "url": "5od3_Pjcr8",
                            "size": 914528223,
                            "hash": "SDctACE=",
                            "title": "I3l6KG_9Ph",
                            "creation": "2020-03-12T00:11:49.988-04:00"
                        }
                    }
                ],
                "rule": [
                    {
                        "contentAttachment": {
                            "contentType": "5W4nl9ovIE",
                            "language": "ASg2TgpFtr",
                            "data": "HUl7BXg=",
                            "url": "1pfLYAglPC",
                            "size": 904172561,
                            "hash": "XAcxXUU=",
                            "title": "ZNIbR2BTQK",
                            "creation": "2020-03-12T00:11:49.989-04:00"
                        }
                    }
                ],
                "legallyBindingAttachment": {
                    "contentType": "JcgilFAJ0Z",
                    "language": "NCznkYoOHN",
                    "data": "WE1FWU8=",
                    "url": "Y1TqMO6zu_",
                    "size": 1576460969,
                    "hash": "ZjJTLVo=",
                    "title": "6v_Y9zIi39",
                    "creation": "2020-03-12T00:11:49.989-04:00"
                }
            }
        },
        "Bundle": {
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                },
                {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "$ref": "#/definitions/Identifier",
                            "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server."
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "document",
                                "message",
                                "transaction",
                                "transaction-response",
                                "batch",
                                "batch-response",
                                "history",
                                "searchset",
                                "collection"
                            ],
                            "description": "Indicates the purpose of this bundle - how it is intended to be used."
                        },
                        "timestamp": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle."
                        },
                        "total": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle."
                        },
                        "link": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bundle_Link",
                                "description": "A series of links that provide context to this bundle."
                            }
                        },
                        "entry": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bundle_Entry",
                                "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only)."
                            }
                        },
                        "signature": {
                            "$ref": "#/definitions/Signature",
                            "description": "Digital Signature - base64 encoded. XML-DSig or a JWT."
                        }
                    }
                }
            ],
            "required": [
                "type"
            ],
            "example": {
                "resourceType": "Bundle",
                "meta": {
                    "versionId": "exaha1GMZU",
                    "lastUpdated": "2020-03-12T00:11:47.779-04:00",
                    "source": "OscBE5P0oL",
                    "profile": [
                        "2t1_PYz6sb"
                    ],
                    "security": [
                        {
                            "system": "__ZQLAVVwf",
                            "version": "VLbtqKcbsY",
                            "code": "VUlDjytwgy",
                            "display": "qiSsBMDgPt",
                            "userSelected": true
                        }
                    ],
                    "tag": [
                        {
                            "system": "zjCxD2PaBs",
                            "version": "rzU1dChGRU",
                            "code": "T_fA90_uZ3",
                            "display": "lX3NJdEblQ",
                            "userSelected": true
                        },
                        {
                            "code": "ibm/complete-mock"
                        }
                    ]
                },
                "implicitRules": "vor6NZfU_z",
                "language": "L2CvMvoQCf",
                "identifier": {
                    "use": "temp",
                    "type": {
                        "coding": [
                            {
                                "system": "2KSvg9_FAi",
                                "version": "gGp8DOk9J1",
                                "code": "mfTsOuaMha",
                                "display": "oWF_kySdMa",
                                "userSelected": true
                            }
                        ],
                        "text": "JCfLMefieh"
                    },
                    "system": "OD8o0wUurR",
                    "value": "rB39S_eWKm",
                    "period": {
                        "start": "2020-03-12T00:11:47.781-04:00",
                        "end": "2020-03-12T00:11:47.781-04:00"
                    }
                },
                "type": "message",
                "timestamp": "2020-03-12T00:11:47.768-04:00",
                "total": 253899444,
                "link": [
                    {
                        "relation": "7ntmg3QgsB",
                        "url": "yqZC1h4OiP"
                    }
                ],
                "entry": [
                    {
                        "link": [
                            {
                                "relation": "BYqAgl7fxn",
                                "url": "FjYy1I_fo0"
                            }
                        ],
                        "fullUrl": "jRHNMRSGoH",
                        "search": {
                            "mode": "outcome",
                            "score": 215939698769
                        },
                        "request": {
                            "method": "HEAD",
                            "url": "fsGmEqxt_V",
                            "ifNoneMatch": "9Ce9vVtTEJ",
                            "ifModifiedSince": "2020-03-12T00:11:47.776-04:00",
                            "ifMatch": "PtLujM597v",
                            "ifNoneExist": "thVohqaRoO"
                        },
                        "response": {
                            "status": "Vz647bKzDX",
                            "location": "vG6ZG5JY3n",
                            "etag": "UAy7mNeNeo",
                            "lastModified": "2020-03-12T00:11:47.773-04:00"
                        }
                    }
                ],
                "signature": {
                    "type": [
                        {
                            "system": "UXJhVBJtsw",
                            "version": "dSN1eoXw7X",
                            "code": "7n8GNkS7ty",
                            "display": "Ff82O7MvgK",
                            "userSelected": true
                        }
                    ],
                    "when": "2020-03-12T00:11:47.767-04:00",
                    "who": {
                        "reference": "Practitioner/8Jt_8Rtofu",
                        "type": "Practitioner",
                        "identifier": {
                            "use": "secondary",
                            "type": {
                                "coding": [
                                    {
                                        "system": "aOvIofeYmD",
                                        "version": "mNBmEi5RDA",
                                        "code": "sM5gtqK3Xw",
                                        "display": "aOf6nJImxy",
                                        "userSelected": true
                                    }
                                ],
                                "text": "zaOFAoPxBA"
                            },
                            "system": "C70kG_5CcM",
                            "value": "TYMT3hKJFR",
                            "period": {
                                "start": "2020-03-12T00:11:47.765-04:00",
                                "end": "2020-03-12T00:11:47.765-04:00"
                            }
                        },
                        "display": "5vUkPEw2_I"
                    },
                    "onBehalfOf": {
                        "reference": "Practitioner/PEch7CxGIg",
                        "type": "Practitioner",
                        "identifier": {
                            "use": "usual",
                            "type": {
                                "coding": [
                                    {
                                        "system": "ixnevWoHGy",
                                        "version": "hJQzXghlpb",
                                        "code": "h6NurXxnyH",
                                        "display": "C0fDviMSsU",
                                        "userSelected": true
                                    }
                                ],
                                "text": "izhrMjXk74"
                            },
                            "system": "giGNRU5rWU",
                            "value": "e7_ezY1vVp",
                            "period": {
                                "start": "2020-03-12T00:11:47.767-04:00",
                                "end": "2020-03-12T00:11:47.767-04:00"
                            }
                        },
                        "display": "nWuUixICQd"
                    },
                    "targetFormat": "F93ISQKaDY",
                    "sigFormat": "Qx2S3AEiMQ",
                    "data": "AGxIVG4="
                }
            }
        },
        "OperationOutcome": {
            "allOf": [
                {
                    "$ref": "#/definitions/DomainResource"
                },
                {
                    "type": "object",
                    "properties": {
                        "issue": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OperationOutcome_Issue",
                                "description": "An error, warning, or information message that results from a system action."
                            }
                        }
                    }
                }
            ],
            "required": [
                "issue"
            ],
            "example": {
                "resourceType": "OperationOutcome",
                "meta": {
                    "versionId": "aj7xYfDKGG",
                    "lastUpdated": "2020-03-12T00:11:56.482-04:00",
                    "source": "ZqswRdBz2V",
                    "profile": [
                        "7MtlUHdgF3"
                    ],
                    "security": [
                        {
                            "system": "eBZLDvfQS6",
                            "version": "3loXo6Bekk",
                            "code": "fApLgubn5v",
                            "display": "hGDoUOaTiY",
                            "userSelected": true
                        }
                    ],
                    "tag": [
                        {
                            "system": "d6ZKFrRy9C",
                            "version": "co9wqQZDjO",
                            "code": "Z2JT_ZxmeR",
                            "display": "f5JMtds3fb",
                            "userSelected": true
                        },
                        {
                            "code": "ibm/complete-mock"
                        }
                    ]
                },
                "implicitRules": "FwNANOTUkD",
                "language": "iDvESiu0cB",
                "text": {
                    "status": "extensions",
                    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"></div>"
                },
                "issue": [
                    {
                        "severity": "warning",
                        "code": "invariant",
                        "details": {
                            "coding": [
                                {
                                    "system": "9TiBhtaNhv",
                                    "version": "38XIrYkjYf",
                                    "code": "s4dzxZ4dsW",
                                    "display": "tu3Q0RYWRq",
                                    "userSelected": true
                                }
                            ],
                            "text": "qW3nzpKNue"
                        },
                        "diagnostics": "4zXKgm6Eae",
                        "location": [
                            "EmMlBkbb8W"
                        ],
                        "expression": [
                            "bSBqh22fAT"
                        ]
                    }
                ]
            }
        },
        "Bundle_Entry": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "link": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bundle_Link",
                                "description": "A series of links that provide context to this entry."
                            }
                        },
                        "fullUrl": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: \n* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)\n* Results from operations might involve resources that are not identified."
                        },
                        "resource": {
                            "$ref": "#/definitions/Resource",
                            "description": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type."
                        },
                        "search": {
                            "$ref": "#/definitions/Bundle_Entry_Search",
                            "description": "Information about the search process that lead to the creation of this entry."
                        },
                        "request": {
                            "$ref": "#/definitions/Bundle_Entry_Request",
                            "description": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry."
                        },
                        "response": {
                            "$ref": "#/definitions/Bundle_Entry_Response",
                            "description": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history."
                        }
                    }
                }
            ]
        },
        "Bundle_Entry_Response": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code."
                        },
                        "location": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The location header created by processing this operation, populated if the operation returns a location."
                        },
                        "etag": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency))."
                        },
                        "lastModified": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "The date/time that the resource was modified on the server."
                        },
                        "outcome": {
                            "$ref": "#/definitions/Resource",
                            "description": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction."
                        }
                    }
                }
            ],
            "required": [
                "status"
            ]
        },
        "Bundle_Entry_Request": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "method": {
                            "type": "string",
                            "enum": [
                                "GET",
                                "HEAD",
                                "POST",
                                "PUT",
                                "DELETE",
                                "PATCH"
                            ],
                            "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred."
                        },
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The URL for this entry, relative to the root (the address to which the request is posted)."
                        },
                        "ifNoneMatch": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread)."
                        },
                        "ifModifiedSince": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread)."
                        },
                        "ifMatch": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency)."
                        },
                        "ifNoneExist": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\")."
                        }
                    }
                }
            ],
            "required": [
                "method",
                "url"
            ]
        },
        "Bundle_Entry_Search": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "mode": {
                            "type": "string",
                            "enum": [
                                "match",
                                "include",
                                "outcome"
                            ],
                            "description": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process."
                        },
                        "score": {
                            "type": "number",
                            "description": "When searching, the server's search ranking score for the entry."
                        }
                    }
                }
            ]
        },
        "Bundle_Link": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "relation": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1)."
                        },
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The reference details for the link."
                        }
                    }
                }
            ],
            "required": [
                "relation",
                "url"
            ]
        },
        "Contract_Rule": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "contentAttachment": {
                            "$ref": "#/definitions/Attachment",
                            "description": "Computable Contract conveyed using a policy rule language (e.g. XACML, DKAL, SecPal)."
                        },
                        "contentReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Computable Contract conveyed using a policy rule language (e.g. XACML, DKAL, SecPal)."
                        }
                    }
                }
            ]
        },
        "Contract_Legal": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "contentAttachment": {
                            "$ref": "#/definitions/Attachment",
                            "description": "Contract legal text in human renderable form."
                        },
                        "contentReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Contract legal text in human renderable form."
                        }
                    }
                }
            ]
        },
        "Contract_Friendly": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "contentAttachment": {
                            "$ref": "#/definitions/Attachment",
                            "description": "Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability."
                        },
                        "contentReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability."
                        }
                    }
                }
            ]
        },
        "Contract_Signer": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/Coding",
                            "description": "Role of this Contract signer, e.g. notary, grantee."
                        },
                        "party": {
                            "$ref": "#/definitions/Reference",
                            "description": "Party which is a signator to this Contract."
                        },
                        "signature": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Signature",
                                "description": "Legally binding Contract DSIG signature contents in Base64."
                            }
                        }
                    }
                }
            ],
            "required": [
                "type",
                "party",
                "signature"
            ]
        },
        "Contract_Term": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "$ref": "#/definitions/Identifier",
                            "description": "Unique identifier for this particular Contract Provision."
                        },
                        "issued": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "When this Contract Provision was issued."
                        },
                        "applies": {
                            "$ref": "#/definitions/Period",
                            "description": "Relevant time or time-period when this Contract Provision is applicable."
                        },
                        "topicCodeableConcept": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "The entity that the term applies to."
                        },
                        "topicReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "The entity that the term applies to."
                        },
                        "type": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A legal clause or condition contained within a contract that requires one or both parties to perform a particular requirement by some specified time or prevents one or both parties from performing a particular requirement by some specified time."
                        },
                        "subType": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A specialized legal clause or condition based on overarching contract type."
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Statement of a provision in a policy or a contract."
                        },
                        "securityLabel": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term_SecurityLabel",
                                "description": "Security labels that protect the handling of information about the term and its elements, which may be specifically identified.."
                            }
                        },
                        "offer": {
                            "$ref": "#/definitions/Contract_Term_Offer",
                            "description": "The matter of concern in the context of this provision of the agrement."
                        },
                        "asset": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term_Asset",
                                "description": "Contract Term Asset List."
                            }
                        },
                        "action": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term_Action",
                                "description": "An actor taking a role in an activity for which it can be assigned some degree of responsibility for the activity taking place."
                            }
                        },
                        "group": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term",
                                "description": "Nested group of Contract Provisions."
                            }
                        }
                    }
                }
            ],
            "required": [
                "offer"
            ]
        },
        "Contract_Term_Action": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "doNotPerform": {
                            "type": "boolean",
                            "description": "True if the term prohibits the  action."
                        },
                        "type": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Activity or service obligation to be done or not done, performed or not performed, effectuated or not by this Contract term."
                        },
                        "subject": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term_Action_Subject",
                                "description": "Entity of the action."
                            }
                        },
                        "intent": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Reason or purpose for the action stipulated by this Contract Provision."
                        },
                        "linkId": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Id [identifier??] of the clause or question text related to this action in the referenced form or QuestionnaireResponse."
                            }
                        },
                        "status": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Current state of the term action."
                        },
                        "context": {
                            "$ref": "#/definitions/Reference",
                            "description": "Encounter or Episode with primary association to specified term activity."
                        },
                        "contextLinkId": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse."
                            }
                        },
                        "occurrenceDateTime": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "When action happens."
                        },
                        "occurrencePeriod": {
                            "$ref": "#/definitions/Period",
                            "description": "When action happens."
                        },
                        "occurrenceTiming": {
                            "$ref": "#/definitions/Timing",
                            "description": "When action happens."
                        },
                        "requester": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Who or what initiated the action and has responsibility for its activation."
                            }
                        },
                        "requesterLinkId": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse."
                            }
                        },
                        "performerType": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "The type of individual that is desired or required to perform or not perform the action."
                            }
                        },
                        "performerRole": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "The type of role or competency of an individual desired or required to perform or not perform the action."
                        },
                        "performer": {
                            "$ref": "#/definitions/Reference",
                            "description": "Indicates who or what is being asked to perform (or not perform) the ction."
                        },
                        "performerLinkId": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse."
                            }
                        },
                        "reasonCode": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "Rationale for the action to be performed or not performed. Describes why the action is permitted or prohibited."
                            }
                        },
                        "reasonReference": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Indicates another resource whose existence justifies permitting or not permitting this action."
                            }
                        },
                        "reason": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Describes why the action is to be performed or not performed in textual form."
                            }
                        },
                        "reasonLinkId": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse."
                            }
                        },
                        "note": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Annotation",
                                "description": "Comments made about the term action made by the requester, performer, subject or other participants."
                            }
                        },
                        "securityLabelNumber": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Security labels that protects the action."
                            }
                        }
                    }
                }
            ],
            "required": [
                "type",
                "intent",
                "status"
            ]
        },
        "Contract_Term_Action_Subject": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "reference": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "The entity the action is performed or not performed on or for."
                            }
                        },
                        "role": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Role type of agent assigned roles in this Contract."
                        }
                    }
                }
            ],
            "required": [
                "reference"
            ]
        },
        "Contract_Term_Asset": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "scope": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Differentiates the kind of the asset ."
                        },
                        "type": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "Target entity type about which the term may be concerned."
                            }
                        },
                        "typeReference": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Associated entities."
                            }
                        },
                        "subtype": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "May be a subtype or part of an offered asset."
                            }
                        },
                        "relationship": {
                            "$ref": "#/definitions/Coding",
                            "description": "Specifies the applicability of the term to an asset resource instance, and instances it refers to orinstances that refer to it, and/or are owned by the offeree."
                        },
                        "context": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term_Asset_Context",
                                "description": "Circumstance of the asset."
                            }
                        },
                        "condition": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Description of the quality and completeness of the asset that imay be a factor in its valuation."
                        },
                        "periodType": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "Type of Asset availability for use or ownership."
                            }
                        },
                        "period": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Period",
                                "description": "Asset relevant contractual time period."
                            }
                        },
                        "usePeriod": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Period",
                                "description": "Time period of asset use."
                            }
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Clause or question text (Prose Object) concerning the asset in a linked form, such as a QuestionnaireResponse used in the formation of the contract."
                        },
                        "linkId": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Id [identifier??] of the clause or question text about the asset in the referenced form or QuestionnaireResponse."
                            }
                        },
                        "answer": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term_Offer_Answer",
                                "description": "Response to assets."
                            }
                        },
                        "securityLabelNumber": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Security labels that protects the asset."
                            }
                        },
                        "valuedItem": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term_Asset_ValuedItem",
                                "description": "Contract Valued Item List."
                            }
                        }
                    }
                }
            ]
        },
        "Contract_Term_Asset_ValuedItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "entityCodeableConcept": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Specific type of Contract Valued Item that may be priced."
                        },
                        "entityReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Specific type of Contract Valued Item that may be priced."
                        },
                        "identifier": {
                            "$ref": "#/definitions/Identifier",
                            "description": "Identifies a Contract Valued Item instance."
                        },
                        "effectiveTime": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "Indicates the time during which this Contract ValuedItem information is effective."
                        },
                        "quantity": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "Specifies the units by which the Contract Valued Item is measured or counted, and quantifies the countable or measurable Contract Valued Item instances."
                        },
                        "unitPrice": {
                            "$ref": "#/definitions/Money",
                            "description": "A Contract Valued Item unit valuation measure."
                        },
                        "factor": {
                            "type": "number",
                            "description": "A real number that represents a multiplier used in determining the overall value of the Contract Valued Item delivered. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount."
                        },
                        "points": {
                            "type": "number",
                            "description": "An amount that expresses the weighting (based on difficulty, cost and/or resource intensiveness) associated with the Contract Valued Item delivered. The concept of Points allows for assignment of point values for a Contract Valued Item, such that a monetary amount can be assigned to each point."
                        },
                        "net": {
                            "$ref": "#/definitions/Money",
                            "description": "Expresses the product of the Contract Valued Item unitQuantity and the unitPriceAmt. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied."
                        },
                        "payment": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Terms of valuation."
                        },
                        "paymentDate": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "When payment is due."
                        },
                        "responsible": {
                            "$ref": "#/definitions/Reference",
                            "description": "Who will make payment."
                        },
                        "recipient": {
                            "$ref": "#/definitions/Reference",
                            "description": "Who will receive payment."
                        },
                        "linkId": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Id  of the clause or question text related to the context of this valuedItem in the referenced form or QuestionnaireResponse."
                            }
                        },
                        "securityLabelNumber": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A set of security labels that define which terms are controlled by this condition."
                            }
                        }
                    }
                }
            ]
        },
        "Contract_Term_Asset_Context": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "reference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Asset context reference may include the creator, custodian, or owning Person or Organization (e.g., bank, repository),  location held, e.g., building,  jurisdiction."
                        },
                        "code": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "Coded representation of the context generally or of the Referenced entity, such as the asset holder type or location."
                            }
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Context description."
                        }
                    }
                }
            ]
        },
        "Contract_Term_Offer": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Identifier",
                                "description": "Unique identifier for this particular Contract Provision."
                            }
                        },
                        "party": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term_Offer_Party",
                                "description": "Offer Recipient."
                            }
                        },
                        "topic": {
                            "$ref": "#/definitions/Reference",
                            "description": "The owner of an asset has the residual control rights over the asset: the right to decide all usages of the asset in any way not inconsistent with a prior contract, custom, or law (Hart, 1995, p. 30)."
                        },
                        "type": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Type of Contract Provision such as specific requirements, purposes for actions, obligations, prohibitions, e.g. life time maximum benefit."
                        },
                        "decision": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Type of choice made by accepting party with respect to an offer made by an offeror/ grantee."
                        },
                        "decisionMode": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CodeableConcept",
                                "description": "How the decision about a Contract was conveyed."
                            }
                        },
                        "answer": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract_Term_Offer_Answer",
                                "description": "Response to offer text."
                            }
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Human readable form of this Contract Offer."
                        },
                        "linkId": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The id of the clause or question text of the offer in the referenced questionnaire/response."
                            }
                        },
                        "securityLabelNumber": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Security labels that protects the offer."
                            }
                        }
                    }
                }
            ]
        },
        "Contract_Term_Offer_Answer": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "valueBoolean": {
                            "type": "boolean",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueDecimal": {
                            "type": "number",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueInteger": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueDate": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueDateTime": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueTime": {
                            "type": "string",
                            "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueString": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueUri": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueAttachment": {
                            "$ref": "#/definitions/Attachment",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueCoding": {
                            "$ref": "#/definitions/Coding",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueQuantity": {
                            "$ref": "#/definitions/Quantity",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        },
                        "valueReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
                        }
                    }
                }
            ]
        },
        "Contract_Term_Offer_Party": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "reference": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference",
                                "description": "Participant in the offer."
                            }
                        },
                        "role": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "How the party participates in the offer."
                        }
                    }
                }
            ],
            "required": [
                "reference",
                "role"
            ]
        },
        "Contract_Term_SecurityLabel": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "number": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number used to link this term or term element to the applicable Security Label."
                            }
                        },
                        "classification": {
                            "$ref": "#/definitions/Coding",
                            "description": "Security label privacy tag that species the level of confidentiality protection required for this term and/or term elements."
                        },
                        "category": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coding",
                                "description": "Security label privacy tag that species the applicable privacy and security policies governing this term and/or term elements."
                            }
                        },
                        "control": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coding",
                                "description": "Security label privacy tag that species the manner in which term and/or term elements are to be protected."
                            }
                        }
                    }
                }
            ],
            "required": [
                "classification"
            ]
        },
        "Contract_ContentDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Precusory content structure and use, i.e., a boilerplate, template, application for a contract such as an insurance policy or benefits under a program, e.g., workers compensation."
                        },
                        "subType": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Detailed Precusory content type."
                        },
                        "publisher": {
                            "$ref": "#/definitions/Reference",
                            "description": "The  individual or organization that published the Contract precursor content."
                        },
                        "publicationDate": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The date (and optionally time) when the contract was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the contract changes."
                        },
                        "publicationStatus": {
                            "type": "string",
                            "enum": [
                                "amended",
                                "appended",
                                "cancelled",
                                "disputed",
                                "entered-in-error",
                                "executable",
                                "executed",
                                "negotiable",
                                "offered",
                                "policy",
                                "rejected",
                                "renewed",
                                "revoked",
                                "resolved",
                                "terminated"
                            ],
                            "description": "draft | active | retired | unknown."
                        },
                        "copyright": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A copyright statement relating to Contract precursor content. Copyright statements are generally legal restrictions on the use and publishing of the Contract precursor content."
                        }
                    }
                }
            ],
            "required": [
                "type",
                "publicationStatus"
            ]
        },
        "OperationOutcome_Issue": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "severity": {
                            "type": "string",
                            "enum": [
                                "fatal",
                                "error",
                                "warning",
                                "information"
                            ],
                            "description": "Indicates whether the issue indicates a variation from successful processing."
                        },
                        "code": {
                            "type": "string",
                            "enum": [
                                "invalid",
                                "structure",
                                "required",
                                "value",
                                "invariant",
                                "security",
                                "login",
                                "unknown",
                                "expired",
                                "forbidden",
                                "suppressed",
                                "processing",
                                "not-supported",
                                "duplicate",
                                "multiple-matches",
                                "not-found",
                                "deleted",
                                "too-long",
                                "code-invalid",
                                "extension",
                                "too-costly",
                                "business-rule",
                                "conflict",
                                "transient",
                                "lock-error",
                                "no-store",
                                "exception",
                                "timeout",
                                "incomplete",
                                "throttled",
                                "informational"
                            ],
                            "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element."
                        },
                        "details": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error."
                        },
                        "diagnostics": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Additional diagnostic information about the issue."
                        },
                        "location": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name."
                            }
                        },
                        "expression": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised."
                            }
                        }
                    }
                }
            ],
            "required": [
                "severity",
                "code"
            ]
        },
        "Element": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Extension",
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "example": [
                            {
                                "url": "http://example.com",
                                "valueString": "text value"
                            }
                        ]
                    }
                }
            }
        },
        "BackboneElement": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "modifierExtension": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extension",
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
                            }
                        }
                    }
                }
            ]
        },
        "Address": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "use": {
                            "type": "string",
                            "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "billing"
                            ],
                            "description": "The purpose of this address."
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "postal",
                                "physical",
                                "both"
                            ],
                            "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both."
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
                        },
                        "line": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information."
                            }
                        },
                        "city": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The name of the city, town, suburb, village or other community or delivery center."
                        },
                        "district": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The name of the administrative area (county)."
                        },
                        "state": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
                        },
                        "postalCode": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A postal code designating a region defined by the postal service."
                        },
                        "country": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Country - a nation as commonly understood or generally accepted."
                        },
                        "period": {
                            "$ref": "#/definitions/Period",
                            "description": "Time period when address was/is in use."
                        }
                    }
                }
            ]
        },
        "Age": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "Annotation": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "authorReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "The individual responsible for making the annotation."
                        },
                        "authorString": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The individual responsible for making the annotation."
                        },
                        "time": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "Indicates when this particular annotation was made."
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The text of the annotation in markdown format."
                        }
                    }
                }
            ],
            "required": [
                "text"
            ]
        },
        "Attachment": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "contentType": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                        },
                        "language": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "The human language of the content. The value can be any valid value according to BCP 47."
                        },
                        "data": {
                            "type": "string",
                            "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                            "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."
                        },
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A location where the data can be accessed."
                        },
                        "size": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                        },
                        "hash": {
                            "type": "string",
                            "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                            "description": "The calculated hash of the data using SHA-1. Represented using base64."
                        },
                        "title": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A label or set of text to display in place of the data."
                        },
                        "creation": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The date that the attachment was first created."
                        }
                    }
                }
            ]
        },
        "CodeableConcept": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "coding": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coding",
                                "description": "A reference to a code defined by a terminology system."
                            }
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                        }
                    }
                }
            ]
        },
        "Coding": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                        },
                        "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                        },
                        "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                        },
                        "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                        },
                        "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                        }
                    }
                }
            ]
        },
        "ContactPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "system": {
                            "type": "string",
                            "enum": [
                                "phone",
                                "fax",
                                "email",
                                "pager",
                                "url",
                                "sms",
                                "other"
                            ],
                            "description": "Telecommunications form for contact point - what communications system is required to make use of the contact."
                        },
                        "value": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                        },
                        "use": {
                            "type": "string",
                            "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "mobile"
                            ],
                            "description": "Identifies the purpose for the contact point."
                        },
                        "rank": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                        },
                        "period": {
                            "$ref": "#/definitions/Period",
                            "description": "Time period when the contact point was/is in use."
                        }
                    }
                }
            ]
        },
        "Count": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "Distance": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "Duration": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "HumanName": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "use": {
                            "type": "string",
                            "enum": [
                                "usual",
                                "official",
                                "temp",
                                "nickname",
                                "anonymous",
                                "old",
                                "maiden"
                            ],
                            "description": "Identifies the purpose for this name."
                        },
                        "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
                        },
                        "family": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
                        },
                        "given": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Given name."
                            }
                        },
                        "prefix": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name."
                            }
                        },
                        "suffix": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name."
                            }
                        },
                        "period": {
                            "$ref": "#/definitions/Period",
                            "description": "Indicates the period of time when this name was valid for the named person."
                        }
                    }
                }
            ]
        },
        "Identifier": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "use": {
                            "type": "string",
                            "enum": [
                                "usual",
                                "official",
                                "temp",
                                "secondary",
                                "old"
                            ],
                            "description": "The purpose of this identifier."
                        },
                        "type": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                        },
                        "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                        },
                        "value": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                        },
                        "period": {
                            "$ref": "#/definitions/Period",
                            "description": "Time period during which identifier is/was valid for use."
                        },
                        "assigner": {
                            "$ref": "#/definitions/Reference",
                            "description": "Organization that issued/manages the identifier.",
                            "example": {
                                "reference": "Organization/123",
                                "type": "Organization",
                                "display": "The Assigning Organization"
                            }
                        }
                    }
                }
            ]
        },
        "Money": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "description": "Numerical value (with implicit precision)."
                        },
                        "currency": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "ISO 4217 Currency Code."
                        }
                    }
                }
            ]
        },
        "MoneyQuantity": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "Period": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "start": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The start of the period. The boundary is inclusive."
                        },
                        "end": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                        }
                    }
                }
            ]
        },
        "Quantity": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                        },
                        "comparator": {
                            "type": "string",
                            "enum": [
                                "<",
                                "<=",
                                ">=",
                                ">"
                            ],
                            "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                        },
                        "unit": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human-readable form of the unit."
                        },
                        "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the system that provides the coded form of the unit."
                        },
                        "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A computer processable form of the unit in some unit representation system."
                        }
                    }
                }
            ]
        },
        "Range": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "low": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "The low limit. The boundary is inclusive."
                        },
                        "high": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "The high limit. The boundary is inclusive."
                        }
                    }
                }
            ]
        },
        "Ratio": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "numerator": {
                            "$ref": "#/definitions/Quantity",
                            "description": "The value of the numerator."
                        },
                        "denominator": {
                            "$ref": "#/definitions/Quantity",
                            "description": "The value of the denominator."
                        }
                    }
                }
            ]
        },
        "Reference": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "reference": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                        },
                        "type": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                        },
                        "identifier": {
                            "$ref": "#/definitions/Identifier",
                            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                        },
                        "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                        }
                    }
                }
            ]
        },
        "SampledData": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "origin": {
                            "$ref": "#/definitions/SimpleQuantity",
                            "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
                        },
                        "period": {
                            "type": "number",
                            "description": "The length of time between sampling times, measured in milliseconds."
                        },
                        "factor": {
                            "type": "number",
                            "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                        },
                        "lowerLimit": {
                            "type": "number",
                            "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                        },
                        "upperLimit": {
                            "type": "number",
                            "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                        },
                        "dimensions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once."
                        },
                        "data": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                        }
                    }
                }
            ],
            "required": [
                "origin",
                "period",
                "dimensions"
            ]
        },
        "SimpleQuantity": {
            "allOf": [
                {
                    "$ref": "#/definitions/Quantity"
                },
                {
                    "type": "object",
                    "properties": {
                    }
                }
            ]
        },
        "Signature": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coding",
                                "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document."
                            }
                        },
                        "when": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "When the digital signature was signed."
                        },
                        "who": {
                            "$ref": "#/definitions/Reference",
                            "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key)."
                        },
                        "onBehalfOf": {
                            "$ref": "#/definitions/Reference",
                            "description": "A reference to an application-usable description of the identity that is represented by the signature."
                        },
                        "targetFormat": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A mime type that indicates the technical format of the target resources signed by the signature."
                        },
                        "sigFormat": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
                        },
                        "data": {
                            "type": "string",
                            "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                            "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
                        }
                    }
                }
            ],
            "required": [
                "type",
                "when",
                "who"
            ]
        },
        "Timing": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "event": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                "description": "Identifies specific times when the event occurs."
                            }
                        },
                        "repeat": {
                            "$ref": "#/definitions/Timing_Repeat",
                            "description": "A set of rules that describe when the event is scheduled."
                        },
                        "code": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
                        }
                    }
                }
            ]
        },
        "Timing_Repeat": {
            "allOf": [
                {
                    "$ref": "#/definitions/BackboneElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "boundsDuration": {
                            "$ref": "#/definitions/Duration",
                            "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
                        },
                        "boundsRange": {
                            "$ref": "#/definitions/Range",
                            "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
                        },
                        "boundsPeriod": {
                            "$ref": "#/definitions/Period",
                            "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
                        },
                        "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
                        },
                        "countMax": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times."
                        },
                        "duration": {
                            "type": "number",
                            "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
                        },
                        "durationMax": {
                            "type": "number",
                            "description": "If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length."
                        },
                        "durationUnit": {
                            "type": "string",
                            "enum": [
                                "s",
                                "min",
                                "h",
                                "d",
                                "wk",
                                "mo",
                                "a"
                            ],
                            "description": "The units of time for the duration, in UCUM units."
                        },
                        "frequency": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
                        },
                        "frequencyMax": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range."
                        },
                        "period": {
                            "type": "number",
                            "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
                        },
                        "periodMax": {
                            "type": "number",
                            "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3-5 days."
                        },
                        "periodUnit": {
                            "type": "string",
                            "enum": [
                                "s",
                                "min",
                                "h",
                                "d",
                                "wk",
                                "mo",
                                "a"
                            ],
                            "description": "The units of time for the period in UCUM units."
                        },
                        "dayOfWeek": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "mon",
                                    "tue",
                                    "wed",
                                    "thu",
                                    "fri",
                                    "sat",
                                    "sun"
                                ],
                                "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                            }
                        },
                        "timeOfDay": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                                "description": "Specified time of day for action to take place."
                            }
                        },
                        "when": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "MORN",
                                    "MORN.early",
                                    "MORN.late",
                                    "NOON",
                                    "AFT",
                                    "AFT.early",
                                    "AFT.late",
                                    "EVE",
                                    "EVE.early",
                                    "EVE.late",
                                    "NIGHT",
                                    "PHS",
                                    "HS",
                                    "WAKE",
                                    "C",
                                    "CM",
                                    "CD",
                                    "CV",
                                    "AC",
                                    "ACM",
                                    "ACD",
                                    "ACV",
                                    "PC",
                                    "PCM",
                                    "PCD",
                                    "PCV"
                                ],
                                "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
                        }
                    }
                }
            ]
        },
        "ContactDetail": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The name of an individual to contact."
                        },
                        "telecom": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContactPoint",
                                "description": "The contact details for the individual (if a name was provided) or the organization."
                            }
                        }
                    }
                }
            ]
        },
        "RelatedArtifact": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "documentation",
                                "justification",
                                "citation",
                                "predecessor",
                                "successor",
                                "derived-from",
                                "depends-on",
                                "composed-of"
                            ],
                            "description": "The type of relationship to the related artifact."
                        },
                        "label": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                        },
                        "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                        },
                        "citation": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                        },
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A url for the artifact that can be followed to access the actual content."
                        },
                        "document": {
                            "$ref": "#/definitions/Attachment",
                            "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
                        },
                        "resource": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                        }
                    }
                }
            ],
            "required": [
                "type"
            ]
        },
        "UsageContext": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "code": {
                            "$ref": "#/definitions/Coding",
                            "description": "A code that identifies the type of context being specified by this usage context."
                        },
                        "valueCodeableConcept": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                        },
                        "valueQuantity": {
                            "$ref": "#/definitions/Quantity",
                            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                        },
                        "valueRange": {
                            "$ref": "#/definitions/Range",
                            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                        },
                        "valueReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                        }
                    }
                }
            ],
            "required": [
                "code"
            ]
        },
        "Meta": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "versionId": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                            "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                        },
                        "lastUpdated": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "When the resource last changed - e.g. when the version changed."
                        },
                        "source": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                        },
                        "profile": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition-definitions.html#StructureDefinition.url)."
                            }
                        },
                        "security": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coding",
                                "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure."
                            }
                        },
                        "tag": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coding",
                                "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource."
                            }
                        }
                    }
                }
            ]
        },
        "Narrative": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "string",
                            "enum": [
                                "generated",
                                "extensions",
                                "additional",
                                "empty"
                            ],
                            "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
                        },
                        "div": {
                            "type": "string",
                            "description": "The actual narrative content, a stripped down version of XHTML."
                        }
                    }
                }
            ],
            "required": [
                "status",
                "div"
            ]
        },
        "Extension": {
            "allOf": [
                {
                    "$ref": "#/definitions/Element"
                },
                {
                    "type": "object",
                    "properties": {
                        "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Source of the definition for the extension code - a logical name or a URL."
                        },
                        "valueBase64Binary": {
                            "type": "string",
                            "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueBoolean": {
                            "type": "boolean",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueCanonical": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueCode": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueDate": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueDateTime": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueDecimal": {
                            "type": "number",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueId": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueInstant": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueInteger": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueMarkdown": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueOid": {
                            "type": "string",
                            "pattern": "urn:oid:[0-2](\\.(0|[1-9][0-9]*))+",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valuePositiveInt": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueString": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueTime": {
                            "type": "string",
                            "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueUnsignedInt": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueUri": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueUrl": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueUuid": {
                            "type": "string",
                            "pattern": "urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueAddress": {
                            "$ref": "#/definitions/Address",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueAge": {
                            "$ref": "#/definitions/Age",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueAnnotation": {
                            "$ref": "#/definitions/Annotation",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueAttachment": {
                            "$ref": "#/definitions/Attachment",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueCodeableConcept": {
                            "$ref": "#/definitions/CodeableConcept",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueCoding": {
                            "$ref": "#/definitions/Coding",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueContactPoint": {
                            "$ref": "#/definitions/ContactPoint",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueCount": {
                            "$ref": "#/definitions/Count",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueDistance": {
                            "$ref": "#/definitions/Distance",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueDuration": {
                            "$ref": "#/definitions/Duration",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueHumanName": {
                            "$ref": "#/definitions/HumanName",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueIdentifier": {
                            "$ref": "#/definitions/Identifier",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueMoney": {
                            "$ref": "#/definitions/Money",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valuePeriod": {
                            "$ref": "#/definitions/Period",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueQuantity": {
                            "$ref": "#/definitions/Quantity",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueRange": {
                            "$ref": "#/definitions/Range",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueRatio": {
                            "$ref": "#/definitions/Ratio",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueReference": {
                            "$ref": "#/definitions/Reference",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueSampledData": {
                            "$ref": "#/definitions/SampledData",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueSignature": {
                            "$ref": "#/definitions/Signature",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueTiming": {
                            "$ref": "#/definitions/Timing",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueContactDetail": {
                            "$ref": "#/definitions/ContactDetail",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueRelatedArtifact": {
                            "$ref": "#/definitions/RelatedArtifact",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueUsageContext": {
                            "$ref": "#/definitions/UsageContext",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        },
                        "valueMeta": {
                            "$ref": "#/definitions/Meta",
                            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                        }
                    }
                }
            ],
            "required": [
                "url"
            ]
        }
    }
}